{"version":3,"sources":["./src/app/property/property-step3/impact-by-tree/impact-by-tree.page.html","./src/app/property/property-step3/impact-by-tree/impact-by-tree.module.ts","./src/app/property/property-step3/impact-by-tree/impact-by-tree.page.scss","./src/app/property/property-step3/impact-by-tree/impact-by-tree.page.ts"],"names":[],"mappings":"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","file":"property-property-step3-impact-by-tree-impact-by-tree-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <!-- <ion-buttons>\\n        <ion-button color=\\\"primary\\\" (click)=\\\"back()\\\">\\n          <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n        </ion-button>\\n      </ion-buttons> -->\\n    <ion-title color=\\\"primary\\\" class=\\\"head\\\">Impact by tree</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n  <form [formGroup]=\\\"impact_by_tree_form\\\" autocomplete=\\\"off\\\">\\n\\n    <ion-label class=\\\"lbl-contact\\\">Impact by tree Details</ion-label>\\n\\n    <div class=\\\"div-que add-margin\\\">\\n\\n      <ion-label class=\\\"lbl-head\\\">Was anyone cutting or lopping the tree when the impact occurred?</ion-label>\\n\\n      <ion-radio-group formControlName=\\\"cutting_lopping\\\">\\n        <ion-item lines=\\\"none\\\" class=\\\"items-radio\\\">\\n          <ion-label class=\\\"lbl-radio\\\">Yes</ion-label>\\n          <ion-radio slot=\\\"start\\\" value=\\\"true\\\" mode=\\\"md\\\"></ion-radio>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" class=\\\"items-radio\\\">\\n          <ion-label class=\\\"lbl-radio\\\">No</ion-label>\\n          <ion-radio slot=\\\"start\\\" value=\\\"false\\\" mode=\\\"md\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n\\n    </div>\\n\\n    <div class=\\\"div-Y\\\" *ngIf=\\\"this.impact_by_tree_form.get('cutting_lopping').value == 'true'\\\">\\n\\n      <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\n        <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Name of tree cutter</ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"name_party\\\" color=\\\"primary\\\" class=\\\"input-box\\\">\\n        </ion-input>\\n      </ion-item>\\n\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n        *ngIf=\\\"impact_by_tree_form.controls.name_party.hasError('required') && impact_by_tree_form.controls.name_party.touched\\\">\\n        <p class=\\\"content\\\">Please Enter Name!</p>\\n      </ion-item>\\n\\n      <ion-item lines=\\\"none\\\" class=\\\"item-dropdown add\\\">\\n        <ion-label position=\\\"stacked\\\" class=\\\"lbl-dropdown\\\">Type of tree cutter</ion-label>\\n        <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"Please Select Option\\\" formControlName=\\\"was_tree_cutter\\\"\\n          class=\\\"btn-select bg\\\" mode=\\\"md\\\">\\n          <ion-select-option value=\\\"Professional Tree Lopper\\\">Professional Tree Lopper</ion-select-option>\\n          <ion-select-option value=\\\"Not known\\\">Not known</ion-select-option>\\n          <ion-select-option value=\\\"Other\\\">Other</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n        *ngIf=\\\"impact_by_tree_form.controls.was_tree_cutter.hasError('required') && impact_by_tree_form.controls.was_tree_cutter.touched\\\">\\n        <p class=\\\"content\\\">Please Select Required Field!</p>\\n      </ion-item>\\n\\n      <!-- Other -->\\n      <div *ngIf=\\\"impact_by_tree_form.get('was_tree_cutter').value == 'Other'\\\">\\n        <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\n          <!-- <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Policy Holder Business Name</ion-label> -->\\n          <ion-input type=\\\"text\\\" color=\\\"primary\\\" formControlName=\\\"was_tree_cutter_other\\\" class=\\\"input-box\\\">\\n          </ion-input>\\n        </ion-item>\\n\\n        <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n          *ngIf=\\\"impact_by_tree_form.controls.was_tree_cutter_other.hasError('required') && impact_by_tree_form.controls.was_tree_cutter_other.touched\\\">\\n          <p class=\\\"content\\\">Please Enter Required Field!</p>\\n        </ion-item>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"div-que add-margin\\\">\\n\\n      <ion-label class=\\\"lbl-head\\\">Prior to the impact was the tree or branch in a safe condition?</ion-label>\\n\\n      <ion-radio-group formControlName=\\\"tree_branch_condition\\\">\\n        <ion-item lines=\\\"none\\\" class=\\\"items-radio\\\">\\n          <ion-label class=\\\"lbl-radio\\\">Yes</ion-label>\\n          <ion-radio slot=\\\"start\\\" value=\\\"true\\\" mode=\\\"md\\\"></ion-radio>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" class=\\\"items-radio\\\">\\n          <ion-label class=\\\"lbl-radio\\\">No</ion-label>\\n          <ion-radio slot=\\\"start\\\" value=\\\"false\\\" mode=\\\"md\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n\\n    </div>\\n\\n    <div class=\\\"div-N\\\" *ngIf=\\\"this.impact_by_tree_form.get('tree_branch_condition').value == 'false'\\\">\\n\\n      <ion-item lines=\\\"none\\\" class=\\\"item-dropdown add\\\">\\n        <ion-label position=\\\"stacked\\\" class=\\\"lbl-dropdown\\\">How did you know?</ion-label>\\n        <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"Please Select Option\\\" formControlName=\\\"how_you_know\\\"\\n          class=\\\"btn-select bg\\\" mode=\\\"md\\\">\\n          <ion-select-option value=\\\"The tree appeared diseased\\\">The tree appeared diseased</ion-select-option>\\n          <ion-select-option value=\\\"The tree appeared dangerous\\\">The tree appeared dangerous</ion-select-option>\\n          <ion-select-option value=\\\"Other\\\">Other</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n        *ngIf=\\\"impact_by_tree_form.controls.how_you_know.hasError('required') && impact_by_tree_form.controls.how_you_know.touched\\\">\\n        <p class=\\\"content\\\">Please Select Required Field!</p>\\n      </ion-item>\\n\\n      <!-- Other -->\\n      <div *ngIf=\\\"impact_by_tree_form.get('how_you_know').value == 'Other'\\\">\\n        <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\n          <!-- <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Policy Holder Business Name</ion-label> -->\\n          <ion-input type=\\\"text\\\" color=\\\"primary\\\" formControlName=\\\"how_you_know_other\\\" class=\\\"input-box\\\">\\n          </ion-input>\\n        </ion-item>\\n\\n        <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n          *ngIf=\\\"impact_by_tree_form.controls.how_you_know_other.hasError('required') && impact_by_tree_form.controls.how_you_know_other.touched\\\">\\n          <p class=\\\"content\\\">Please Enter Required Field!</p>\\n        </ion-item>\\n      </div>\\n\\n      <div class=\\\"div-que add-margin\\\">\\n\\n        <ion-label class=\\\"lbl-head\\\">Was the owner aware the tree was a danger to your property?</ion-label>\\n\\n        <ion-radio-group formControlName=\\\"is_owner_aware\\\">\\n          <ion-item lines=\\\"none\\\" class=\\\"items-radio\\\">\\n            <ion-label class=\\\"lbl-radio\\\">Yes</ion-label>\\n            <ion-radio slot=\\\"start\\\" value=\\\"true\\\" mode=\\\"md\\\"></ion-radio>\\n          </ion-item>\\n          <ion-item lines=\\\"none\\\" class=\\\"items-radio\\\">\\n            <ion-label class=\\\"lbl-radio\\\">No</ion-label>\\n            <ion-radio slot=\\\"start\\\" value=\\\"false\\\" mode=\\\"md\\\"></ion-radio>\\n          </ion-item>\\n        </ion-radio-group>\\n\\n      </div>\\n\\n      <div class=\\\"div-Y\\\" *ngIf=\\\"this.impact_by_tree_form.get('is_owner_aware').value == 'true'\\\">\\n\\n        <ion-item lines=\\\"none\\\" class=\\\"item-dropdown add\\\">\\n          <ion-label position=\\\"stacked\\\" class=\\\"lbl-dropdown\\\">How were they made aware?</ion-label>\\n          <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"Please Select Option\\\" formControlName=\\\"how_made_aware\\\"\\n            class=\\\"btn-select bg\\\" mode=\\\"md\\\">\\n            <ion-select-option value=\\\"We had complained in writing\\\">We had complained in writing</ion-select-option>\\n            <ion-select-option value=\\\"We complained verbally\\\">We complained verbally</ion-select-option>\\n            <ion-select-option value=\\\"It was obviously dangerous\\\">It was obviously dangerous</ion-select-option>\\n            <ion-select-option value=\\\"Other\\\">Other</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n\\n        <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n          *ngIf=\\\"impact_by_tree_form.controls.how_made_aware.hasError('required') && impact_by_tree_form.controls.how_made_aware.touched\\\">\\n          <p class=\\\"content\\\">Please Select Required Field!</p>\\n        </ion-item>\\n\\n        <!-- Other -->\\n        <div *ngIf=\\\"impact_by_tree_form.get('how_made_aware').value == 'Other'\\\">\\n          <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\n            <!-- <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Policy Holder Business Name</ion-label> -->\\n            <ion-input type=\\\"text\\\" color=\\\"primary\\\" formControlName=\\\"how_made_aware_other\\\" class=\\\"input-box\\\">\\n            </ion-input>\\n          </ion-item>\\n\\n          <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n            *ngIf=\\\"impact_by_tree_form.controls.how_made_aware_other.hasError('required') && impact_by_tree_form.controls.how_made_aware_other.touched\\\">\\n            <p class=\\\"content\\\">Please Enter Required Field!</p>\\n          </ion-item>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n  </form>\\n\\n</ion-content>\\n\\n<ion-footer class=\\\"btns-footer\\\">\\n  <ion-row class=\\\"row-footer\\\">\\n    <ion-col class=\\\"col-footer border-R\\\">\\n      <ion-button expand=\\\"full\\\" class=\\\"btn-back\\\" (click)=\\\"back()\\\">\\n        <ion-icon name=\\\"arrow-round-back\\\" mode=\\\"md\\\" size=\\\"large\\\"></ion-icon>\\n      </ion-button>\\n    </ion-col>\\n    <ion-col class=\\\"col-footer border-L\\\">\\n      <ion-button expand=\\\"full\\\" class=\\\"btn-next\\\">\\n        <ion-icon name=\\\"arrow-round-forward\\\" mode=\\\"md\\\" size=\\\"large\\\"></ion-icon>\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n</ion-footer>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ImpactByTreePage } from './impact-by-tree.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ImpactByTreePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ImpactByTreePage]\n})\nexport class ImpactByTreePageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb3BlcnR5L3Byb3BlcnR5LXN0ZXAzL2ltcGFjdC1ieS10cmVlL2ltcGFjdC1ieS10cmVlLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NavController } from '@ionic/angular';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-impact-by-tree',\n  templateUrl: './impact-by-tree.page.html',\n  styleUrls: ['./impact-by-tree.page.scss'],\n})\nexport class ImpactByTreePage implements OnInit {\n\n  impact_by_tree_form: FormGroup;\n\n  constructor(private navCtrl: NavController,\n    private router:Router,\n    private formBuilder: FormBuilder,\n    private statusBar: StatusBar) { \n\n      this.impact_by_tree_fb();\n    }\n\n    ionViewWillEnter() {\n      this.statusBar.show();\n      this.statusBar.styleDefault();\n      this.statusBar.backgroundColorByHexString('#ffffff');\n    }\n\n    impact_by_tree_fb() {\n      this.impact_by_tree_form = this.formBuilder.group({\n        cutting_lopping: [null, Validators.required],\n        name_party: [null, Validators.required],\n        was_tree_cutter: [null, Validators.required],\n        was_tree_cutter_other: [null, Validators.required],\n        tree_branch_condition: [null, Validators.required],\n        how_you_know: [null, Validators.required],\n        how_you_know_other: [null, Validators.required],\n        is_owner_aware: [null, Validators.required],\n        how_made_aware: [null, Validators.required],\n        how_made_aware_other: [null, Validators.required],\n      });\n    }\n\n    ImpactByTreeNext(){\n      for (let v in this.impact_by_tree_form.controls) {\n        this.impact_by_tree_form.controls[v].markAsTouched();\n      }\n      if (this.impact_by_tree_form.valid) {\n        const body = {\n          \"cutting_lopping\" : this.impact_by_tree_form.value.cutting_lopping,\n          \"name_party\" : this.impact_by_tree_form.value.name_party,\n          \"was_tree_cutter\" : this.impact_by_tree_form.value.was_tree_cutter,\n          \"was_tree_cutter_other\" : this.impact_by_tree_form.value.was_tree_cutter_other,\n          \"tree_branch_condition\" : this.impact_by_tree_form.value.tree_branch_condition,\n          \"how_you_know\" : this.impact_by_tree_form.value.how_you_know,\n          \"how_you_know_other\" : this.impact_by_tree_form.value.how_you_know_other,\n          \"is_owner_aware\" : this.impact_by_tree_form.value.is_owner_aware,\n          \"how_made_aware\" : this.impact_by_tree_form.value.how_made_aware,\n          \"how_made_aware_other\" : this.impact_by_tree_form.value.how_made_aware_other,\n        };\n      }\n    }\n\n    ngOnInit() {\n    }\n    \n    back(){\n      this.navCtrl.pop();\n    }\n\n}"],"sourceRoot":""}