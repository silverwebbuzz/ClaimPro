{"version":3,"sources":["./src/app/property/property-step1/property-step1.page.html","./src/app/property/property-step1/property-step1.module.ts","./src/app/property/property-step1/property-step1.page.scss","./src/app/property/property-step1/property-step1.page.ts"],"names":[],"mappings":"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","file":"property-property-step1-property-step1-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n      <!-- <ion-buttons>\\r\\n        <ion-button color=\\\"primary\\\" (click)=\\\"back()\\\">\\r\\n          <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-buttons> -->\\r\\n      <ion-title color=\\\"primary\\\" class=\\\"head\\\">Client / Policyholder</ion-title>\\r\\n    </ion-toolbar>\\r\\n  </ion-header>\\r\\n  \\r\\n  <ion-content padding>\\r\\n  \\r\\n    <form [formGroup]=\\\"property_form_step1\\\" autocomplete=\\\"off\\\">\\r\\n  \\r\\n      <ion-item lines=\\\"none\\\" class=\\\"item-dropdown\\\">\\r\\n        <ion-label position=\\\"stacked\\\" class=\\\"lbl-dropdown\\\">How would you like to be contacted?</ion-label>\\r\\n        <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"Please Select Option\\\" formControlName=\\\"preferred_communication\\\" class=\\\"btn-select bg\\\" mode=\\\"md\\\">\\r\\n            <ion-select-option *ngFor=\\\"let opt of preferred_communication | keyvalue\\\" [value]=\\\"opt.key\\\">{{opt.value}}</ion-select-option>\\r\\n          <!-- <ion-select-option value=\\\"Telephone\\\">Telephone</ion-select-option>\\r\\n          <ion-select-option value=\\\"Email\\\">Email</ion-select-option>\\r\\n          <ion-select-option value=\\\"SMS\\\">SMS</ion-select-option>\\r\\n          <ion-select-option value=\\\"Letter\\\">Letter</ion-select-option> -->\\r\\n        </ion-select>\\r\\n      </ion-item>\\r\\n  \\r\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n        *ngIf=\\\"property_form_step1.controls.preferred_communication.hasError('required') && property_form_step1.controls.preferred_communication.touched\\\">\\r\\n        <p class=\\\"content\\\">Please Select Required Field!</p>\\r\\n      </ion-item>\\r\\n  \\r\\n      <ion-item class=\\\"item-dropdown add\\\" lines=\\\"none\\\">\\r\\n        <ion-label position=\\\"stacked\\\" class=\\\"lbl-dropdown\\\">Client type</ion-label>\\r\\n        <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"Please Select Option\\\" formControlName=\\\"type_entitiy\\\" class=\\\"btn-select bg\\\" mode=\\\"md\\\">\\r\\n            <ion-select-option *ngFor=\\\"let opt of client_type | keyvalue\\\" [value]=\\\"opt.key\\\">{{opt.value}}</ion-select-option>\\r\\n          <!-- <ion-select-option value=\\\"Personal\\\">Personal</ion-select-option>\\r\\n          <ion-select-option value=\\\"Commercial\\\">Commercial</ion-select-option>\\r\\n          <ion-select-option value=\\\"Government\\\">Government</ion-select-option>\\r\\n          <ion-select-option value=\\\"Association\\\">Association</ion-select-option> -->\\r\\n        </ion-select>\\r\\n      </ion-item>\\r\\n  \\r\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n        *ngIf=\\\"property_form_step1.controls.type_entitiy.hasError('required') && property_form_step1.controls.type_entitiy.touched\\\">\\r\\n        <p class=\\\"content\\\">Please Select Required Field!</p>\\r\\n      </ion-item>\\r\\n\\r\\n        <div *ngIf=\\\"property_form_step1.get('type_entitiy').value &&  property_form_step1.get('type_entitiy').value != '1001'\\\">\\r\\n        <ion-item lines=\\\"none\\\" class=\\\"input-item\\\">\\r\\n          <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Policy Holder Business Name</ion-label>\\r\\n          <ion-input type=\\\"text\\\" formControlName=\\\"client_company\\\" color=\\\"primary\\\" class=\\\"input-box\\\"></ion-input>\\r\\n        </ion-item>\\r\\n\\r\\n        <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n        *ngIf=\\\"property_form_step1.controls.client_company.hasError('required') && property_form_step1.controls.client_company.touched\\\">\\r\\n        <p class=\\\"content\\\">Please Fill Required Field!</p>\\r\\n      </ion-item>\\r\\n    </div>\\r\\n  \\r\\n    </form>\\r\\n  \\r\\n  </ion-content>\\r\\n  \\r\\n  <ion-footer class=\\\"btns-footer\\\">\\r\\n    <ion-row class=\\\"row-footer\\\">\\r\\n      <ion-col class=\\\"col-footer border-R\\\">\\r\\n        <ion-button expand=\\\"full\\\" class=\\\"btn-back\\\" (click)=\\\"back()\\\">\\r\\n          <ion-icon name=\\\"arrow-round-back\\\" mode=\\\"md\\\" size=\\\"large\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col class=\\\"col-footer border-L\\\">\\r\\n        <ion-button expand=\\\"full\\\" class=\\\"btn-next\\\" (click)=\\\"propertyStep1Next()\\\">\\r\\n          <ion-icon name=\\\"arrow-round-forward\\\" mode=\\\"md\\\" size=\\\"large\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-footer>\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CommonMockService } from 'src/app/common-mock.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PropertyStep1Page } from './property-step1.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PropertyStep1Page\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [PropertyStep1Page],\r\n  providers: [\r\n    Title, CommonMockService,\r\n   ],\r\n})\r\nexport class PropertyStep1PageModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb3BlcnR5L3Byb3BlcnR5LXN0ZXAxL3Byb3BlcnR5LXN0ZXAxLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { NavController } from '@ionic/angular';\r\nimport { Router } from '@angular/router';\r\nimport { CommonMockService } from 'src/app/common-mock.service';\r\n\r\n@Component({\r\n  selector: 'app-property-step1',\r\n  templateUrl: './property-step1.page.html',\r\n  styleUrls: ['./property-step1.page.scss'],\r\n})\r\nexport class PropertyStep1Page implements OnInit {\r\n\r\n  property_form_step1: FormGroup;\r\n  Claim_number: any;\r\n  editClaimData: any;\r\n\r\n   /* dropdown option Variable Start */\r\n   client_type: any;\r\n   preferred_communication: any;\r\n   /* dropdown option Variable End */\r\n\r\n  constructor(private navCtrl: NavController,\r\n    private router: Router,\r\n    public _cS: CommonMockService,\r\n    private formBuilder: FormBuilder,\r\n    private statusBar: StatusBar) {\r\n    this.property_step1_fb();\r\n    this.formControlValueChanged();\r\n    this.setClaimData();\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.statusBar.show();\r\n    this.statusBar.styleDefault();\r\n    this.statusBar.backgroundColorByHexString('#ffffff');\r\n  }\r\n\r\n\r\n  property_step1_fb() {\r\n    this.property_form_step1 = this.formBuilder.group({\r\n      preferred_communication: [null, Validators.required],\r\n      type_entitiy: [null, Validators.required],\r\n      client_company: [null]\r\n    });\r\n  }\r\n\r\n  formControlValueChanged() {\r\n    this.property_form_step1.get('type_entitiy')\r\n      .valueChanges.subscribe(\r\n        (val: any) => {\r\n          const client_company = this.property_form_step1.get('client_company');\r\n          if (val == \"1001\") {\r\n            client_company.patchValue(null);\r\n            client_company.clearValidators();\r\n            client_company.updateValueAndValidity();\r\n          } else {\r\n            client_company.setValidators([Validators.required]);\r\n          }\r\n        });\r\n  }\r\n\r\n  propertyStep1Next() {\r\n    for (let v in this.property_form_step1.controls) {\r\n      this.property_form_step1.controls[v].markAsTouched();\r\n    }\r\n    if (this.property_form_step1.valid) {\r\n      const step1 = {\r\n        \"step\": 'step1',\r\n        \"ClaimNumber\": localStorage.getItem('PropertyClaimNumber'),\r\n        \"contacted\": this.property_form_step1.value.preferred_communication,\r\n        \"client_type\": this.property_form_step1.value.type_entitiy,\r\n        \"business_name\": this.property_form_step1.value.client_company,\r\n      };\r\n      this._cS.put_API(this._cS.URL_Property_Claim_Post(), step1)\r\n        .subscribe((data: any) => {\r\n          if (data.status == 0) {\r\n            this.setClaimData();\r\n            this.router.navigate(['/property-step2']);\r\n          } else {\r\n          }\r\n        }, err => {\r\n        });\r\n    }\r\n  }\r\n\r\n  setClaimData() {\r\n    var claimNumber = localStorage.getItem('PropertyClaimNumber');\r\n    if (claimNumber) {\r\n      this._cS.get_API_Data(this._cS.URL_Ref_Claim_data(), claimNumber)\r\n        .subscribe((data: any) => {\r\n          if (data.status == 0) {\r\n            console.log(\"editdate\", data);\r\n            this.editClaimData = data.data;\r\n\r\n            if (this.editClaimData.preferred_communication) {\r\n              var preferred_communication = JSON.parse(this.editClaimData.preferred_communication);\r\n              for (var preferred_communication_set in preferred_communication) {\r\n              }\r\n            }\r\n            else {\r\n              preferred_communication_set = null;\r\n            }\r\n  \r\n            if (this.editClaimData.type_entitiy) {\r\n              var type_entitiyArry = JSON.parse(this.editClaimData.type_entitiy);\r\n              for (var type_entitiy_set in type_entitiyArry) {\r\n              }\r\n            }\r\n            else {\r\n              type_entitiy_set = null;\r\n            }\r\n           \r\n\r\n            this.property_form_step1.setValue({\r\n              preferred_communication: preferred_communication_set,\r\n              type_entitiy: type_entitiy_set,\r\n              client_company: this.editClaimData.client_company,\r\n            })\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    // DropDown Option List Value \r\n    /* Step - 1 How would you like to be contacted */\r\n    this._cS.getoptionvalue_API(5)\r\n      .subscribe((data: any) => {\r\n        if (data.status == 0) {\r\n          this.preferred_communication = data.data;\r\n        }\r\n      });\r\n\r\n    /* Step - 1 Client type */\r\n    this._cS.getoptionvalue_API(1)\r\n      .subscribe((data: any) => {\r\n        if (data.status == 0) {\r\n          this.client_type = data.data;\r\n        }\r\n      });\r\n  }\r\n  back() {\r\n    this.navCtrl.pop();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}