{"version":3,"sources":["./src/app/signup/signup.page.html","./src/app/signup/signup.module.ts","./src/app/signup/signup.page.scss","./src/app/signup/signup.page.ts"],"names":[],"mappings":"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","file":"signup-signup-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons>\\r\\n      <ion-button color=\\\"primary\\\" (click)=\\\"back()\\\">\\r\\n        <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title color=\\\"primary\\\" class=\\\"head\\\">Sign up</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n\\r\\n  <img src=\\\"../../assets/images/insurence-logo.png\\\" class=\\\"lbl-logo\\\" />\\r\\n\\r\\n  <form [formGroup]=\\\"registration_form\\\" autocomplete=\\\"off\\\">\\r\\n\\r\\n      <ion-item lines=\\\"none\\\" class=\\\"item-dropdown add\\\">\\r\\n          <ion-label position=\\\"stacked\\\" class=\\\"lbl-dropdown\\\">User Type</ion-label>\\r\\n          <ion-select class=\\\"btn-select bg\\\" placeholder=\\\"Please Select Option\\\" okText=\\\"Okay\\\" cancelText=\\\"Dismiss\\\">\\r\\n              <ion-select-option>Individual</ion-select-option>\\r\\n              <ion-select-option>Business</ion-select-option>\\r\\n            </ion-select>\\r\\n      </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">First Name</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"firstname\\\" color=\\\"primary\\\" class=\\\"input-box\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.firstname.hasError('required') && registration_form.controls.firstname.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter First Name!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Last Name</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"lastname\\\" color=\\\"primary\\\" class=\\\"input-box\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.lastname.hasError('required') && registration_form.controls.lastname.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Last Name!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Phone Number</ion-label>\\r\\n      <ion-input type=\\\"number\\\" formControlName=\\\"phone_number\\\" color=\\\"primary\\\" class=\\\"input-box\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.phone_number.hasError('required') && registration_form.controls.phone_number.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Phone Number!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Mobile</ion-label>\\r\\n      <ion-input type=\\\"number\\\" formControlName=\\\"mobile\\\" color=\\\"primary\\\" class=\\\"input-box\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.mobile.hasError('required') && registration_form.controls.mobile.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Mobile!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Email Address</ion-label>\\r\\n      <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" color=\\\"primary\\\" class=\\\"input-box\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.email.hasError('required') && registration_form.controls.email.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Email Address!</p>\\r\\n    </ion-item>\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.email.hasError('pattern') && registration_form.controls.email.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Valid Email Address!</p>\\r\\n    </ion-item>\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.email.hasError('incorrect') && registration_form.controls.email.touched\\\">\\r\\n      <p class=\\\"content\\\">Email Address is already taken!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">New Password</ion-label>\\r\\n      <ion-input type=\\\"number\\\" formControlName=\\\"password\\\" color=\\\"primary\\\" class=\\\"input-box\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.password.hasError('required') && registration_form.controls.password.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter New Password!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Confirm Password</ion-label>\\r\\n      <ion-input type=\\\"number\\\" formControlName=\\\"confirmpassword\\\" color=\\\"primary\\\" class=\\\"input-box\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.confirmpassword.hasError('required') && registration_form.controls.confirmpassword.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Confirm Password!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-label class=\\\"lbl-contact add-margin add\\\">Physical address</ion-label>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Street</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"street\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"address_line_1\\\"\\r\\n        (ionFocus)=\\\"riskAddress()\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.street.hasError('required') && registration_form.controls.street.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Street!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Suburb/Town</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"city\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"city\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.city.hasError('required') && registration_form.controls.city.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Suburb/Town!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">State</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"state\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"state\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.state.hasError('required') && registration_form.controls.state.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter State!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Postcode</ion-label>\\r\\n      <ion-input type=\\\"number\\\" formControlName=\\\"postal_code\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"postcode\\\">\\r\\n      </ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.postal_code.hasError('required') && registration_form.controls.postal_code.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Postcode!</p>\\r\\n    </ion-item>\\r\\n    \\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Country</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"country\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"country\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.country.hasError('required') && registration_form.controls.country.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Country!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-label class=\\\"lbl-contact add-margin add\\\">Postal address</ion-label>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"add-spc\\\">\\r\\n      <ion-checkbox mode=\\\"md\\\" slot=\\\"start\\\" class=\\\"add-check\\\" formControlName=\\\"same_address\\\"></ion-checkbox>\\r\\n      <ion-label class=\\\"add-lbl\\\">Same as physical address</ion-label>\\r\\n    </ion-item>\\r\\n\\r\\n    <div>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Street</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"tp_street\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"tp_StreetValue\\\"\\r\\n        (ionFocus)=\\\"riskAddress()\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.tp_street.hasError('required') && registration_form.controls.tp_street.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Street!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Suburb/Town</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"tp_city\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"tp_SuburbValue\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.tp_city.hasError('required') && registration_form.controls.tp_city.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Suburb/Town!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">State</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"tp_state\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"tp_StateValue\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.tp_state.hasError('required') && registration_form.controls.tp_state.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter State!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Postcode</ion-label>\\r\\n      <ion-input type=\\\"number\\\" formControlName=\\\"tp_postal_code\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"tp_PostCodeValue\\\">\\r\\n      </ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.tp_postal_code.hasError('required') && registration_form.controls.tp_postal_code.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Postcode!</p>\\r\\n    </ion-item>\\r\\n    \\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Country</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"tp_country\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"tp_CountryValue\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.tp_country.hasError('required') && registration_form.controls.tp_country.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Country!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <!-- <ion-card class=\\\"card-note\\\">\\r\\n      <ion-label>\\r\\n        Password is auto generated and we will send in email.\\r\\n      </ion-label>\\r\\n    </ion-card> -->\\r\\n\\r\\n    <ion-radio-group formControlName=\\\"contact_option\\\">\\r\\n      <ion-label color=\\\"primary\\\" class=\\\"lbl-head-radio add-margin add\\\">How would you like to be contacted?</ion-label>\\r\\n\\r\\n      <ion-item lines=\\\"none\\\" class=\\\"items-radio\\\">\\r\\n        <ion-label class=\\\"lbl-radio\\\">Phone Call</ion-label>\\r\\n        <ion-radio slot=\\\"start\\\" class=\\\"btn-radio\\\" value=\\\"Phone Call\\\" mode=\\\"md\\\"></ion-radio>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item lines=\\\"none\\\" class=\\\"items-radio\\\">\\r\\n        <ion-label class=\\\"lbl-radio\\\">SMS</ion-label>\\r\\n        <ion-radio slot=\\\"start\\\" class=\\\"btn-radio\\\" value=\\\"SMS\\\" mode=\\\"md\\\"></ion-radio>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item lines=\\\"none\\\" class=\\\"items-radio\\\">\\r\\n        <ion-label class=\\\"lbl-radio\\\">Email</ion-label>\\r\\n        <ion-radio slot=\\\"start\\\" class=\\\"btn-radio\\\" value=\\\"Email\\\" mode=\\\"md\\\"></ion-radio>\\r\\n      </ion-item>\\r\\n    </ion-radio-group>\\r\\n\\r\\n    <div class=\\\"btns-bottom\\\">\\r\\n\\r\\n      <ion-label class=\\\"lbl-signup\\\">Already have an account? <ion-text color=\\\"primary\\\" routerLink=\\\"/signin\\\"> Sign in.\\r\\n        </ion-text>\\r\\n      </ion-label>\\r\\n\\r\\n      <ion-button expand=\\\"full\\\" size=\\\"large\\\" shape=\\\"round\\\" class=\\\"btn-signin\\\" (click)=\\\"submitRegister()\\\">SIGN UP\\r\\n      </ion-button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonMockService } from 'src/app/common-mock.service';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { SignupPage } from './signup.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SignupPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    HttpClientModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [SignupPage],\r\n  providers: [\r\n    Title, CommonMockService,\r\n   ],\r\n})\r\nexport class SignupPageModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXAucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { NavController, MenuController } from '@ionic/angular';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\r\nimport { CommonMockService } from '../common-mock.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\ndeclare var AddressFinder: any;\r\ndeclare var $: any;\r\n\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.page.html',\r\n  styleUrls: ['./signup.page.scss'],\r\n})\r\nexport class SignupPage implements OnInit {\r\n\r\n  registration_form: FormGroup;\r\n  lst_states: any = [];\r\n  addcity: any;\r\n  addstate: any;\r\n  addpincode: any;\r\n\r\n\r\n  constructor(private navCtrl: NavController,\r\n    private router: Router,\r\n    public _cS: CommonMockService,\r\n    private formBuilder: FormBuilder,\r\n    private statusBar: StatusBar,\r\n    private menu: MenuController) {\r\n\r\n    this.registration_fb();\r\n  }\r\n\r\n  ionViewWillEnter(){\r\n    this.menu.enable(false);\r\n\r\n    this.statusBar.show();\r\n    this.statusBar.styleDefault();\r\n    this.statusBar.backgroundColorByHexString('#ffffff');\r\n  }\r\n\r\n  registration_fb() {\r\n    this.registration_form = this.formBuilder.group({\r\n      firstname: [null, Validators.required],\r\n      lastname: [null, Validators.required],\r\n      phone_number: [null, Validators.required],\r\n      mobile: [null, Validators.required],\r\n      email: [null, Validators.compose([\r\n        Validators.pattern('[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})'),\r\n        Validators.required\r\n      ])],\r\n      password: [null, Validators.required],\r\n      confirmpassword: [null, Validators.required],\r\n\r\n      street: [null, Validators.required],\r\n      city: [null, Validators.required],\r\n      state: [null, Validators.required],\r\n      postal_code: [null, Validators.required],\r\n      country: [null, Validators.required],\r\n\r\n      same_address: [null, Validators.required],\r\n\r\n      tp_street: [null, Validators.required],\r\n      tp_city: [null, Validators.required],\r\n      tp_state: [null, Validators.required],\r\n      tp_postal_code: [null, Validators.required],\r\n      tp_country: [null, Validators.required],\r\n\r\n      contact_option: [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    let script = document.createElement(\"script\");\r\n    script.src = \"https://api.addressfinder.io/assets/v3/widget.js\";\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n    \r\n    }\r\n\r\n    riskAddress() {\r\n      let widget = new AddressFinder.Widget(\r\n        document.getElementById(\"address_line_1\"),\r\n        \"PVW639JF4ET8ALGDHNKB\",\r\n        \"AU\",\r\n        {}\r\n      );\r\n  \r\n      let returnResult = new BehaviorSubject(null);\r\n      widget.on(\"result:select\", function (fullAddress, metaData) {\r\n        var selected = new AddressFinder.NZSelectedAddress(fullAddress, metaData);\r\n        let SpaceCount = selected.originalAddressLines[1].split(\" \").length;\r\n        let setnum = SpaceCount - 2;\r\n        let mainadddate = selected.originalAddressLines[1].split(\" \").splice(-SpaceCount);\r\n        let adddate = selected.originalAddressLines[1].split(\" \").splice(setnum);\r\n        this.addstate = adddate[0];\r\n        this.addpincode = adddate[1];\r\n        const index: number = mainadddate.indexOf(this.addstate);\r\n        if (index !== -1) {\r\n          mainadddate.splice(index, 1);\r\n        }\r\n        const index2: number = mainadddate.indexOf(this.addpincode);\r\n        if (index2 !== -1) {\r\n          mainadddate.splice(index2, 2);\r\n        }\r\n        let returnJSON = {\r\n          mainadddate: mainadddate,\r\n          metaData: metaData\r\n        }\r\n        returnResult.next(returnJSON);\r\n      });\r\n      returnResult.subscribe(val => {\r\n        if (val) {\r\n          let address_line_1 = val.metaData.address_line_1;\r\n          let mainadddate = val.mainadddate.join(' ');\r\n          let postcode = val.metaData.postcode;\r\n          let state_territory = val.metaData.state_territory;\r\n          let country1 = \"Australia\";\r\n          \r\n          var JSON = {\r\n            street: address_line_1,\r\n            city: mainadddate,\r\n            postal_code: postcode,\r\n            state: state_territory,\r\n            country: country1\r\n          }\r\n          this.registration_form.patchValue(JSON);    \r\n        }\r\n      })\r\n    }\r\n\r\n  submitRegister() {\r\n    console.log('type:', this.registration_form.value.usertype);\r\n    for (let v in this.registration_form.controls) {\r\n      this.registration_form.controls[v].markAsTouched();\r\n    }\r\n    if (this.registration_form.valid) {\r\n      this._cS.presentLoading();\r\n      /* Address Start */\r\n      let StreetValue = null;\r\n      let SuburbValue = null;\r\n      let PostCodeValue = null;\r\n      let StateValue = null;\r\n      let CountryValue = null;\r\n\r\n      if ((<HTMLInputElement>document.getElementById(\"address_line_1\"))) {\r\n        StreetValue = (<HTMLInputElement>document.getElementById(\"address_line_1\")).value;\r\n      }\r\n      if ((<HTMLInputElement>document.getElementById(\"city\"))) {\r\n        SuburbValue = (<HTMLInputElement>document.getElementById(\"city\")).value;\r\n      }\r\n      if ((<HTMLInputElement>document.getElementById(\"postcode\"))) {\r\n        PostCodeValue = (<HTMLInputElement>document.getElementById(\"postcode\")).value;\r\n      }\r\n      if ((<HTMLInputElement>document.getElementById(\"state\"))) {\r\n        StateValue = (<HTMLInputElement>document.getElementById(\"state\")).value;\r\n      }\r\n      if ((<HTMLInputElement>document.getElementById(\"country\"))) {\r\n        CountryValue = (<HTMLInputElement>document.getElementById(\"country\")).value;\r\n      }\r\n      /* Address End */\r\n      const body = {\r\n        \"firstname\": this.registration_form.value.firstname,\r\n        \"lastname\": this.registration_form.value.lastname,\r\n        \"phone_number\": this.registration_form.value.phone_number,\r\n        \"mobile\": this.registration_form.value.mobile,\r\n        \"email\": this.registration_form.value.email,\r\n        \"password\": this.registration_form.value.password,\r\n        \"confirmpassword\": this.registration_form.value.confirmpassword,\r\n\r\n        \"street\": StreetValue,\r\n        \"city\": SuburbValue,\r\n        \"state\": StateValue,\r\n        \"postal_code\": PostCodeValue,\r\n        \"country\": CountryValue,\r\n\r\n        \"same_address\": this.registration_form.value.same_address,\r\n\r\n        \"tp_street\": this.registration_form.value.tp_street,\r\n        \"tp_city\": this.registration_form.value.tp_city,\r\n        \"tp_state\": this.registration_form.value.tp_state,\r\n        \"tp_postal_code\": this.registration_form.value.tp_postal_code,\r\n        \"tp_country\": this.registration_form.value.tp_country,\r\n\r\n        \"sla\": this.registration_form.value.contact_option\r\n      };  \r\n        this._cS.post_API_withOutToken(this._cS.URL_User_Create_post(), body)\r\n          .subscribe((data: any) => {\r\n            if(this._cS.isLoading){\r\n              this._cS.dismissLoading();\r\n            }\r\n            if (data.status == 0) {\r\n             \r\n              this._cS.presentToastWithOptions(data.message);\r\n              this._cS._router.navigate(['/signin']);\r\n            } else {\r\n              this._cS.presentToastWithOptions(data.message);\r\n            }\r\n          }, err => {\r\n            if (this._cS.isLoading) {\r\n              this._cS.dismissLoading();\r\n            }\r\n          });\r\n      \r\n    }\r\n  }\r\n\r\n  back() {\r\n    this.navCtrl.pop();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}