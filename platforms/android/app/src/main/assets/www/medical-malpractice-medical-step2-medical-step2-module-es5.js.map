{"version":3,"sources":["./src/app/medical-malpractice/medical-step2/medical-step2.page.html","./src/app/medical-malpractice/medical-step2/medical-step2.module.ts","./src/app/medical-malpractice/medical-step2/medical-step2.page.scss","./src/app/medical-malpractice/medical-step2/medical-step2.page.ts"],"names":[],"mappings":"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","file":"medical-malpractice-medical-step2-medical-step2-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n      <!-- <ion-buttons>\\r\\n        <ion-button color=\\\"primary\\\" (click)=\\\"back()\\\">\\r\\n          <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-buttons> -->\\r\\n      <ion-title color=\\\"primary\\\" class=\\\"head\\\">Client / Policyholder</ion-title>\\r\\n    </ion-toolbar>\\r\\n  </ion-header>\\r\\n  \\r\\n  <ion-content padding>\\r\\n  \\r\\n    <form [formGroup]=\\\"medical_form_step2\\\" autocomplete=\\\"off\\\">\\r\\n  \\r\\n      <!-- <div class=\\\"div-que\\\">\\r\\n        <ion-label class=\\\"lbl-head\\\">Do you trade under a business name?</ion-label>\\r\\n  \\r\\n        <ion-radio-group formControlName=\\\"business_name\\\">\\r\\n          <ion-item lines=\\\"none\\\" class=\\\"items-radio\\\">\\r\\n            <ion-label class=\\\"lbl-radio\\\">Yes</ion-label>\\r\\n            <ion-radio slot=\\\"start\\\" value=\\\"true\\\" mode=\\\"md\\\"></ion-radio>\\r\\n          </ion-item>\\r\\n          <ion-item lines=\\\"none\\\" class=\\\"items-radio\\\">\\r\\n            <ion-label class=\\\"lbl-radio\\\">No</ion-label>\\r\\n            <ion-radio slot=\\\"start\\\" value=\\\"false\\\" mode=\\\"md\\\"></ion-radio>\\r\\n          </ion-item>\\r\\n        </ion-radio-group>\\r\\n      </div> -->\\r\\n  \\r\\n      <!-- <div class=\\\"div-Y\\\" *ngIf=\\\"this.medical_form_step2.get('business_name').value == 'true'\\\">\\r\\n  \\r\\n          <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n            <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Trading name</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"trading_name\\\" color=\\\"primary\\\" class=\\\"input-box\\\"></ion-input>\\r\\n          </ion-item>\\r\\n  \\r\\n          <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n            *ngIf=\\\"medical_form_step2.controls.trading_name.hasError('required') && medical_form_step2.controls.trading_name.touched\\\">\\r\\n            <p class=\\\"content\\\">Please Enter Trading name!</p>\\r\\n          </ion-item>\\r\\n  \\r\\n          <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n            <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">ABN</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"abn_client\\\" color=\\\"primary\\\" class=\\\"input-box\\\"></ion-input>\\r\\n          </ion-item>\\r\\n  \\r\\n          <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n            *ngIf=\\\"medical_form_step2.controls.abn_client.hasError('required') && medical_form_step2.controls.abn_client.touched\\\">\\r\\n            <p class=\\\"content\\\">Please Enter ABN!</p>\\r\\n          </ion-item>\\r\\n  \\r\\n        </div> -->\\r\\n  \\r\\n        <ion-item class=\\\"item-dropdown add\\\" lines=\\\"none\\\">\\r\\n          <ion-label position=\\\"stacked\\\" class=\\\"lbl-dropdown\\\">On what basis are you employed?</ion-label>\\r\\n          <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"Please Select Option\\\" formControlName=\\\"employment_classification\\\" class=\\\"btn-select bg\\\" mode=\\\"md\\\">\\r\\n              <ion-select-option *ngFor=\\\"let opt of employment_classification | keyvalue\\\" [value]=\\\"opt.key\\\">{{opt.value}}</ion-select-option>\\r\\n            <!-- <ion-select-option value=\\\"Employee (Full time)\\\">Employee (Full time)</ion-select-option>\\r\\n            <ion-select-option value=\\\"Employee (Part Time)\\\">Employee (Part Time)</ion-select-option>\\r\\n            <ion-select-option value=\\\"Sole Trader\\\">Sole Trader</ion-select-option>\\r\\n            <ion-select-option value=\\\"Partner\\\">Partner</ion-select-option>\\r\\n            <ion-select-option value=\\\"Locum\\\">Locum</ion-select-option>\\r\\n            <ion-select-option value=\\\"Principle\\\">Principle</ion-select-option>\\r\\n            <ion-select-option value=\\\"Other\\\">Other</ion-select-option> -->\\r\\n          </ion-select>\\r\\n        </ion-item>\\r\\n  \\r\\n        <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n          *ngIf=\\\"medical_form_step2.controls.employment_classification.hasError('required') && medical_form_step2.controls.employment_classification.touched\\\">\\r\\n          <p class=\\\"content\\\">Please Select Required Field!</p>\\r\\n        </ion-item>\\r\\n  \\r\\n        <!-- Other -->\\r\\n        <div *ngIf=\\\"medical_form_step2.get('employment_classification').value == '1880'\\\">\\r\\n          <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n            <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Please specify</ion-label>\\r\\n            <ion-input type=\\\"text\\\" color=\\\"primary\\\" formControlName=\\\"employment_classification_other\\\" class=\\\"input-box\\\"></ion-input>\\r\\n          </ion-item>\\r\\n  \\r\\n          <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n            *ngIf=\\\"medical_form_step2.controls.employment_classification_other.hasError('required') && medical_form_step2.controls.employment_classification_other.touched\\\">\\r\\n            <p class=\\\"content\\\">Please Enter Required Field!</p>\\r\\n          </ion-item>\\r\\n        </div>\\r\\n  \\r\\n        <ion-item class=\\\"item-dropdown add\\\" lines=\\\"none\\\">\\r\\n          <ion-label position=\\\"stacked\\\" class=\\\"lbl-dropdown\\\">What is your employment status?</ion-label>\\r\\n          <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"Please Select Option\\\" formControlName=\\\"employment_status\\\" class=\\\"btn-select bg\\\" mode=\\\"md\\\">\\r\\n              <!-- <ion-select-option *ngFor=\\\"let opt of employment_status | keyvalue\\\" [value]=\\\"opt.key\\\">{{opt.value}}</ion-select-option> -->\\r\\n            <ion-select-option value=\\\"1882\\\">Private Practioner</ion-select-option>\\r\\n            <ion-select-option value=\\\"1883\\\">Partner</ion-select-option>\\r\\n            <ion-select-option value=\\\"1884\\\">Public Practioner</ion-select-option>\\r\\n            <ion-select-option value=\\\"1943\\\">Restricted(Less then 15 hours)</ion-select-option>\\r\\n            <ion-select-option value=\\\"1944\\\">Retiree</ion-select-option>\\r\\n            <ion-select-option value=\\\"1945\\\">1st Year Practioner</ion-select-option>\\r\\n            <ion-select-option value=\\\"1946\\\">Locum</ion-select-option>\\r\\n            <ion-select-option value=\\\"1947\\\">Student</ion-select-option>\\r\\n            <ion-select-option value=\\\"1885\\\">Other</ion-select-option>\\r\\n          </ion-select>\\r\\n        </ion-item>\\r\\n  \\r\\n        <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n          *ngIf=\\\"medical_form_step2.controls.employment_status.hasError('required') && medical_form_step2.controls.employment_status.touched\\\">\\r\\n          <p class=\\\"content\\\">Please Select Required Field!</p>\\r\\n        </ion-item>\\r\\n  \\r\\n        <!-- Other -->\\r\\n        <div *ngIf=\\\"medical_form_step2.get('employment_status').value == '1885'\\\">\\r\\n          <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n            <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Please specify</ion-label>\\r\\n            <ion-input type=\\\"text\\\" color=\\\"primary\\\" formControlName=\\\"employment_status_other\\\" class=\\\"input-box\\\">\\r\\n            </ion-input>\\r\\n          </ion-item>\\r\\n  \\r\\n          <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n            *ngIf=\\\"medical_form_step2.controls.employment_status_other.hasError('required') && medical_form_step2.controls.employment_status_other.touched\\\">\\r\\n            <p class=\\\"content\\\">Please Enter Required Field!</p>\\r\\n          </ion-item>\\r\\n        </div>\\r\\n  \\r\\n        <ion-item class=\\\"item-dropdown add\\\" lines=\\\"none\\\">\\r\\n          <ion-label position=\\\"stacked\\\" class=\\\"lbl-dropdown\\\">What is your length experience?</ion-label>\\r\\n          <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"Please Select Option\\\" formControlName=\\\"years_experience\\\" class=\\\"btn-select bg\\\" mode=\\\"md\\\">\\r\\n            <ion-select-option value=\\\"Less than 1 year\\\">Less than 1 year</ion-select-option>\\r\\n            <ion-select-option value=\\\"1-5 years\\\">1 - 5 years</ion-select-option>\\r\\n            <ion-select-option value=\\\"More than 5 years\\\">More than 5 years</ion-select-option>\\r\\n          </ion-select>\\r\\n        </ion-item>\\r\\n  \\r\\n        <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n          *ngIf=\\\"medical_form_step2.controls.years_experience.hasError('required') && medical_form_step2.controls.years_experience.touched\\\">\\r\\n          <p class=\\\"content\\\">Please Select Required Field!</p>\\r\\n        </ion-item>\\r\\n\\r\\n        <ion-item class=\\\"item-dropdown add\\\" lines=\\\"none\\\">\\r\\n            <ion-label position=\\\"stacked\\\" class=\\\"lbl-dropdown\\\">Where did you qualify?</ion-label>\\r\\n            <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"Please Select Option\\\" formControlName=\\\"where_qualified\\\" class=\\\"btn-select bg\\\" mode=\\\"md\\\">\\r\\n                <ion-select-option *ngFor=\\\"let opt of where_qualified | keyvalue\\\" [value]=\\\"opt.key\\\">{{opt.value}}</ion-select-option>\\r\\n              <!-- <ion-select-option value=\\\"University\\\">University</ion-select-option>\\r\\n              <ion-select-option value=\\\"Overseas Qualification\\\">Overseas Qualification</ion-select-option>\\r\\n              <ion-select-option value=\\\"Other\\\">Other</ion-select-option> -->\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n    \\r\\n          <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n            *ngIf=\\\"medical_form_step2.controls.where_qualified.hasError('required') && medical_form_step2.controls.where_qualified.touched\\\">\\r\\n            <p class=\\\"content\\\">Please Select Required Field!</p>\\r\\n          </ion-item>\\r\\n    \\r\\n          <!-- Other -->\\r\\n          <div *ngIf=\\\"medical_form_step2.get('where_qualified').value == '1895'\\\">\\r\\n            <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n              <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Please specify</ion-label>\\r\\n              <ion-input type=\\\"text\\\" color=\\\"primary\\\" formControlName=\\\"where_qualified_other\\\" class=\\\"input-box\\\">\\r\\n              </ion-input>\\r\\n            </ion-item>\\r\\n    \\r\\n            <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n              *ngIf=\\\"medical_form_step2.controls.where_qualified_other.hasError('required') && medical_form_step2.controls.where_qualified_other.touched\\\">\\r\\n              <p class=\\\"content\\\">Please Enter Required Field!</p>\\r\\n            </ion-item>\\r\\n          </div>\\r\\n\\r\\n          <ion-item class=\\\"item-dropdown add\\\" lines=\\\"none\\\">\\r\\n              <ion-label position=\\\"stacked\\\" class=\\\"lbl-dropdown\\\">What type of practitioner are you?</ion-label>\\r\\n              <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"Please Select Option\\\" formControlName=\\\"type_practioner\\\" class=\\\"btn-select bg\\\" mode=\\\"md\\\">\\r\\n                  <ion-select-option *ngFor=\\\"let opt of type_practioner | keyvalue\\\" [value]=\\\"opt.key\\\">{{opt.value}}</ion-select-option>\\r\\n                <!-- <ion-select-option value=\\\"General\\\">General</ion-select-option>\\r\\n                <ion-select-option value=\\\"Sports\\\">Sports</ion-select-option>\\r\\n                <ion-select-option value=\\\"Musculoskeletal\\\">Musculoskeletal</ion-select-option>\\r\\n                <ion-select-option value=\\\"Cardiothoracic\\\">Cardiothoracic</ion-select-option>\\r\\n                <ion-select-option value=\\\"Neurological\\\">Neurological</ion-select-option>\\r\\n                <ion-select-option value=\\\"Aquatic\\\">Aquatic</ion-select-option>\\r\\n                <ion-select-option value=\\\"Paediatric\\\">Paediatric</ion-select-option>\\r\\n                <ion-select-option value=\\\"Genontological\\\">Genontological</ion-select-option>\\r\\n                <ion-select-option value=\\\"Continence & Womens Health\\\">Continence & Womens Health</ion-select-option>\\r\\n                <ion-select-option value=\\\"Animal Physiotherapist\\\">Animal Physiotherapist</ion-select-option>\\r\\n                <ion-select-option value=\\\"Acupuncture\\\">Acupuncture</ion-select-option>\\r\\n                <ion-select-option value=\\\"Aged Care\\\">Aged Care</ion-select-option>\\r\\n                <ion-select-option value=\\\"Occupational Physiotherapy\\\">Occupational Physiotherapy</ion-select-option>\\r\\n                <ion-select-option value=\\\"Other\\\">Other</ion-select-option> -->\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n      \\r\\n            <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n              *ngIf=\\\"medical_form_step2.controls.type_practioner.hasError('required') && medical_form_step2.controls.type_practioner.touched\\\">\\r\\n              <p class=\\\"content\\\">Please Select Required Field!</p>\\r\\n            </ion-item>\\r\\n      \\r\\n            <!-- Other -->\\r\\n            <div *ngIf=\\\"medical_form_step2.get('type_practioner').value == '1890'\\\">\\r\\n              <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n                <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Please specify</ion-label>\\r\\n                <ion-input type=\\\"text\\\" color=\\\"primary\\\" formControlName=\\\"type_practioner_other\\\" class=\\\"input-box\\\">\\r\\n                </ion-input>\\r\\n              </ion-item>\\r\\n      \\r\\n              <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n                *ngIf=\\\"medical_form_step2.controls.type_practioner_other.hasError('required') && medical_form_step2.controls.type_practioner_other.touched\\\">\\r\\n                <p class=\\\"content\\\">Please Enter Required Field!</p>\\r\\n              </ion-item>\\r\\n            </div>\\r\\n  \\r\\n    </form>\\r\\n  \\r\\n  </ion-content>\\r\\n  \\r\\n  <ion-footer class=\\\"btns-footer\\\">\\r\\n    <ion-row class=\\\"row-footer\\\">\\r\\n      <ion-col class=\\\"col-footer border-R\\\">\\r\\n        <ion-button expand=\\\"full\\\" class=\\\"btn-back\\\" (click)=\\\"back()\\\">\\r\\n          <ion-icon name=\\\"arrow-round-back\\\" mode=\\\"md\\\" size=\\\"large\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col class=\\\"col-footer border-L\\\">\\r\\n        <ion-button expand=\\\"full\\\" class=\\\"btn-next\\\" (click)=\\\"medicalStep2Next()\\\">\\r\\n          <ion-icon name=\\\"arrow-round-forward\\\" mode=\\\"md\\\" size=\\\"large\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-footer>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MedicalStep2Page } from './medical-step2.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MedicalStep2Page\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MedicalStep2Page]\n})\nexport class MedicalStep2PageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lZGljYWwtbWFscHJhY3RpY2UvbWVkaWNhbC1zdGVwMi9tZWRpY2FsLXN0ZXAyLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { NavController } from '@ionic/angular';\r\nimport { Router } from '@angular/router';\r\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\r\nimport { CommonMockService } from 'src/app/common-mock.service';\r\n\r\n@Component({\r\n  selector: 'app-medical-step2',\r\n  templateUrl: './medical-step2.page.html',\r\n  styleUrls: ['./medical-step2.page.scss'],\r\n})\r\nexport class MedicalStep2Page implements OnInit {\r\n\r\n  medical_form_step2: FormGroup;\r\n  Claim_number: any;\r\n  editClaimData: any;\r\n\r\n  /* dropdown option Variable Start */\r\n  employment_classification: any;\r\n  employment_status: any;\r\n  where_qualified: any;\r\n  type_practioner: any;\r\n\r\n  constructor(private navCtrl: NavController,\r\n    public _cS: CommonMockService,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private statusBar: StatusBar) {\r\n    this.medical_step2_fb();\r\n    this.setClaimData();\r\n    //this.formControlValueChanged();\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.statusBar.show();\r\n    this.statusBar.styleDefault();\r\n    this.statusBar.backgroundColorByHexString('#ffffff');\r\n  }\r\n\r\n  medical_step2_fb() {\r\n    this.medical_form_step2 = this.formBuilder.group({\r\n      // business_name: [null, Validators.required],\r\n      // trading_name: [null],\r\n      // abn_client: [null],\r\n      employment_classification: [null, Validators.required],\r\n      employment_classification_other: [null],\r\n      employment_status: [null, Validators.required],\r\n      employment_status_other: [null],\r\n      years_experience: [null, Validators.required],\r\n      where_qualified: [null, Validators.required],\r\n      where_qualified_other: [null],\r\n      type_practioner: [null, Validators.required],\r\n      type_practioner_other: [null],\r\n    });\r\n  }\r\n\r\n  formControlValueChanged() {\r\n\r\n    this.medical_form_step2.get('business_name')\r\n      .valueChanges.subscribe(\r\n        (val: any) => {\r\n          const trading_name = this.medical_form_step2.get('trading_name');\r\n          const abn_client = this.medical_form_step2.get('abn_client');\r\n\r\n          trading_name.patchValue(null);\r\n          trading_name.clearValidators();\r\n          trading_name.updateValueAndValidity();\r\n\r\n          abn_client.patchValue(null);\r\n          abn_client.clearValidators();\r\n          abn_client.updateValueAndValidity();\r\n\r\n          if (val == \"true\") {\r\n            trading_name.setValidators([Validators.required]);\r\n            abn_client.setValidators([Validators.required, Validators.maxLength(11)]);\r\n          }\r\n        });\r\n    this.medical_form_step2.get('employment_classification')\r\n      .valueChanges.subscribe(\r\n        (val: any) => {\r\n          const employment_classification_other = this.medical_form_step2.get('employment_classification_other');\r\n          if (val == \"1880\") {\r\n            employment_classification_other.setValidators([Validators.required]);\r\n          } else {\r\n            employment_classification_other.patchValue(null);\r\n            employment_classification_other.clearValidators();\r\n            employment_classification_other.updateValueAndValidity();\r\n          }\r\n        });\r\n    this.medical_form_step2.get('employment_status')\r\n      .valueChanges.subscribe(\r\n        (val: any) => {\r\n          const employment_status_other = this.medical_form_step2.get('employment_status_other');\r\n          if (val == '1885') {\r\n            employment_status_other.setValidators([Validators.required]);\r\n          } else {\r\n            employment_status_other.patchValue(null);\r\n            employment_status_other.clearValidators();\r\n            employment_status_other.updateValueAndValidity();\r\n          }\r\n        });\r\n    this.medical_form_step2.get('where_qualified')\r\n      .valueChanges.subscribe(\r\n        (val: any) => {\r\n          const where_qualified_other = this.medical_form_step2.get('where_qualified_other');\r\n          if (val == \"1895\") {\r\n            where_qualified_other.setValidators([Validators.required]);\r\n          } else {\r\n            where_qualified_other.patchValue(null);\r\n            where_qualified_other.clearValidators();\r\n            where_qualified_other.updateValueAndValidity();\r\n          }\r\n        });\r\n    this.medical_form_step2.get('type_practioner')\r\n      .valueChanges.subscribe(\r\n        (val: any) => {\r\n          const type_practioner_other = this.medical_form_step2.get('type_practioner_other');\r\n          if (val == \"1890\") {\r\n            type_practioner_other.setValidators([Validators.required]);\r\n          } else {\r\n            type_practioner_other.patchValue(null);\r\n            type_practioner_other.clearValidators();\r\n            type_practioner_other.updateValueAndValidity();\r\n          }\r\n        });\r\n  }\r\n\r\n  medicalStep2Next() {\r\n    for (let v in this.medical_form_step2.controls) {\r\n      this.medical_form_step2.controls[v].markAsTouched();\r\n    }\r\n    if (this.medical_form_step2.valid) {\r\n      const step2 = {\r\n        \"step\": 'step2',\r\n        \"ClaimNumber\": localStorage.getItem('MedicalClaimNumber'),\r\n        // \"business_name\": this.medical_form_step2.value.business_name,\r\n        // \"trading_name\": this.medical_form_step2.value.trading_name,\r\n        // \"abn_client\": this.medical_form_step2.value.abn_client,\r\n        'employment_classification': this.medical_form_step2.value.employment_classification,\r\n        \"employment_classification_other\": this.medical_form_step2.value.employment_classification_other,\r\n        \"employment_status\": this.medical_form_step2.value.employment_status,\r\n        \"employment_status_other\": this.medical_form_step2.value.employment_status_other,\r\n        \"years_experience\": this.medical_form_step2.value.years_experience,\r\n        'where_qualified': this.medical_form_step2.value.where_qualified,\r\n        \"where_qualified_other\": this.medical_form_step2.value.where_qualified_other,\r\n        \"type_practioner\": this.medical_form_step2.value.type_practioner,\r\n        \"type_practioner_other\": this.medical_form_step2.value.type_practioner_other,\r\n      };\r\n      this._cS.put_API(this._cS.URL_Medical_Claim_Post(), step2)\r\n        .subscribe((data: any) => {\r\n          if (data.status == 0) {\r\n            this.setClaimData();\r\n            this.router.navigate(['/medical-step3']);\r\n          } else {\r\n          }\r\n        }, err => {\r\n        });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // dropdown value\r\n    /* Step - 2 employment_classification */\r\n    this._cS.getoptionvalue_API(113)\r\n      .subscribe((data: any) => {\r\n        if (data.status == 0) {\r\n          this.employment_classification = data.data;\r\n        }\r\n      });\r\n    this._cS.getoptionvalue_API(114)\r\n      .subscribe((data: any) => {\r\n        if (data.status == 0) {\r\n          this.employment_status = data.data;\r\n        }\r\n      });\r\n    this._cS.getoptionvalue_API(116)\r\n      .subscribe((data: any) => {\r\n        if (data.status == 0) {\r\n          this.where_qualified = data.data;\r\n        }\r\n      });\r\n    this._cS.getoptionvalue_API(115)\r\n      .subscribe((data: any) => {\r\n        if (data.status == 0) {\r\n          this.type_practioner = data.data;\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  setClaimData() {\r\n    var claimNumber = localStorage.getItem('MedicalClaimNumber');\r\n    if (claimNumber) {\r\n      this._cS.get_API_Data(this._cS.URL_Ref_Claim_data(), claimNumber)\r\n        .subscribe((data: any) => {\r\n          if (data.status == 0) {\r\n            this.editClaimData = data.data;\r\n            if (this.editClaimData.employment_classification) {\r\n              var employment_classification = JSON.parse(this.editClaimData.employment_classification);\r\n              for (var employment_classification_set in employment_classification) {\r\n              }\r\n            }\r\n            else {\r\n              employment_classification_set = null;\r\n            }\r\n  \r\n            if (this.editClaimData.employment_status) {\r\n              var employment_status = JSON.parse(this.editClaimData.employment_status);\r\n              for (var employment_status_set in employment_status) {\r\n              }\r\n            }\r\n            else {\r\n              employment_status_set = null;\r\n            }\r\n  \r\n            if (this.editClaimData.type_practioner) {\r\n              var type_practioner = JSON.parse(this.editClaimData.type_practioner);\r\n              for (var type_practioner_set in type_practioner) {\r\n              }\r\n            }\r\n            else {\r\n              type_practioner_set = null;\r\n            }\r\n  \r\n  \r\n            if (this.editClaimData.where_qualified) {\r\n              var where_qualified = JSON.parse(this.editClaimData.where_qualified);\r\n              for (var where_qualified_set in where_qualified) {\r\n              }\r\n            }\r\n            else {\r\n              where_qualified_set = null;\r\n            }\r\n            this.medical_form_step2.setValue({\r\n              //business_name: this.editClaimData.business_name,\r\n              // trading_name: this.editClaimData.trading_name,\r\n              // abn_client: this.editClaimData.abn_client,\r\n              employment_classification: employment_classification_set,\r\n              employment_classification_other: this.editClaimData.employment_classification_other,\r\n              employment_status: employment_status_set,\r\n              employment_status_other: this.editClaimData.employment_status_other,\r\n              years_experience: this.editClaimData.years_experience,\r\n              where_qualified: where_qualified_set,\r\n              where_qualified_other: this.editClaimData.where_qualified_other,\r\n              type_practioner: type_practioner_set,\r\n              type_practioner_other: this.editClaimData.type_practioner_other,\r\n            })\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  back() {\r\n    this.navCtrl.pop();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}