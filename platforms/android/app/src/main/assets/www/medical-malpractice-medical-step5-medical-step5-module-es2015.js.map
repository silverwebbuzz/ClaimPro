{"version":3,"sources":["./src/app/medical-malpractice/medical-step5/medical-step5.page.html","./src/app/medical-malpractice/medical-step5/medical-step5.module.ts","./src/app/medical-malpractice/medical-step5/medical-step5.page.scss","./src/app/medical-malpractice/medical-step5/medical-step5.page.ts"],"names":[],"mappings":"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","file":"medical-malpractice-medical-step5-medical-step5-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <!-- <ion-buttons>\\r\\n      <ion-button color=\\\"primary\\\" (click)=\\\"back()\\\">\\r\\n        <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons> -->\\r\\n    <ion-title color=\\\"primary\\\" class=\\\"head\\\">Incident details</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n\\r\\n  <form [formGroup]=\\\"medical_form_step5\\\" autocomplete=\\\"off\\\">\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"item-dropdown\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"lbl-dropdown\\\">Where did the loss/damage occur?</ion-label>\\r\\n      <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"Please Select Option\\\" formControlName=\\\"where_loss_damage\\\" class=\\\"btn-select bg\\\" mode=\\\"md\\\" (ionChange)=\\\"occurchange($event.target.value)\\\">\\r\\n          <ion-select-option *ngFor=\\\"let opt of where_loss_damage | keyvalue\\\" [value]=\\\"opt.key\\\">{{opt.value}}</ion-select-option>\\r\\n        <!-- <ion-select-option value=\\\"Risk Address\\\">Risk Address</ion-select-option>\\r\\n        <ion-select-option value=\\\"Another Location\\\">Another Location</ion-select-option>\\r\\n        <ion-select-option value=\\\"In Transit\\\">In Transit</ion-select-option>\\r\\n        <ion-select-option value=\\\"Other\\\">Other</ion-select-option> -->\\r\\n      </ion-select>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"medical_form_step5.controls.where_loss_damage.hasError('required') && medical_form_step5.controls.where_loss_damage.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Select Required Field!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <!-- Another Location, Risk Address -->\\r\\n    <div\\r\\n      *ngIf=\\\"medical_form_step5.get('where_loss_damage').value == '1343' || medical_form_step5.get('where_loss_damage').value == '1344'\\\">\\r\\n      <ion-label class=\\\"lbl-contact add-margin\\\">Address details</ion-label>\\r\\n\\r\\n      <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n        <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Street</ion-label>\\r\\n        <ion-input type=\\\"text\\\" formControlName=\\\"risk_street\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"address_line_1\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n        *ngIf=\\\"medical_form_step5.controls.risk_street.hasError('required') && medical_form_step5.controls.risk_street.touched\\\">\\r\\n        <p class=\\\"content\\\">Please Enter Street!</p>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n        <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Suburb/Town</ion-label>\\r\\n        <ion-input type=\\\"text\\\" formControlName=\\\"risk_suburb\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"city\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n        *ngIf=\\\"medical_form_step5.controls.risk_suburb.hasError('required') && medical_form_step5.controls.risk_suburb.touched\\\">\\r\\n        <p class=\\\"content\\\">Please Enter Town!</p>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n        <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">State</ion-label>\\r\\n        <ion-input type=\\\"text\\\" formControlName=\\\"risk_state\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"state\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n        *ngIf=\\\"medical_form_step5.controls.risk_state.hasError('required') && medical_form_step5.controls.risk_state.touched\\\">\\r\\n        <p class=\\\"content\\\">Please Enter State!</p>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n        <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">PostCode</ion-label>\\r\\n        <ion-input type=\\\"number\\\" formControlName=\\\"risk_postcode\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"postcode\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n        *ngIf=\\\"medical_form_step5.controls.risk_postcode.hasError('required') && medical_form_step5.controls.risk_postcode.touched\\\">\\r\\n        <p class=\\\"content\\\">Please Enter Postcode!</p>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n        <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Country</ion-label>\\r\\n        <ion-input type=\\\"text\\\" formControlName=\\\"risk_country\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"country\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n        *ngIf=\\\"medical_form_step5.controls.risk_country.hasError('required') && medical_form_step5.controls.risk_country.touched\\\">\\r\\n        <p class=\\\"content\\\">Please Enter Country!</p>\\r\\n      </ion-item>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <!-- Other -->\\r\\n    <div *ngIf=\\\"medical_form_step5.get('where_loss_damage').value == '1346'\\\">\\r\\n      <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n        <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Please specify</ion-label>\\r\\n        <ion-input type=\\\"text\\\" color=\\\"primary\\\" formControlName=\\\"where_loss_damage_other\\\" class=\\\"input-box\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n        *ngIf=\\\"medical_form_step5.controls.where_loss_damage_other.hasError('required') && medical_form_step5.controls.where_loss_damage_other.touched\\\">\\r\\n        <p class=\\\"content\\\">Please Enter Required Field!</p>\\r\\n      </ion-item>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"div-que add-margin\\\">\\r\\n      <ion-label class=\\\"lbl-head\\\">Does the complaint refer to a personal injury?</ion-label>\\r\\n\\r\\n      <ion-radio-group formControlName=\\\"personal_injury\\\">\\r\\n        <ion-item lines=\\\"none\\\" class=\\\"items-radio\\\">\\r\\n          <ion-label class=\\\"lbl-radio\\\">Yes</ion-label>\\r\\n          <ion-radio slot=\\\"start\\\" value=\\\"true\\\" mode=\\\"md\\\"></ion-radio>\\r\\n        </ion-item>\\r\\n        <ion-item lines=\\\"none\\\" class=\\\"items-radio\\\">\\r\\n          <ion-label class=\\\"lbl-radio\\\">No</ion-label>\\r\\n          <ion-radio slot=\\\"start\\\" value=\\\"false\\\" mode=\\\"md\\\"></ion-radio>\\r\\n        </ion-item>\\r\\n      </ion-radio-group>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"div-Y\\\" *ngIf=\\\"this.medical_form_step5.get('personal_injury').value == 'true'\\\">\\r\\n\\r\\n      <ion-item lines=\\\"none\\\" class=\\\"input-item\\\">\\r\\n        <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">How did the injury occur?</ion-label>\\r\\n        <ion-textarea rows=\\\"3\\\" formControlName=\\\"how_injury_occur\\\" type=\\\"text\\\" color=\\\"primary\\\" class=\\\"input-box\\\">\\r\\n        </ion-textarea>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n        *ngIf=\\\"medical_form_step5.controls.how_injury_occur.hasError('required') && medical_form_step5.controls.how_injury_occur.touched\\\">\\r\\n        <p class=\\\"content\\\">Please Enter Required Field!</p>\\r\\n      </ion-item>\\r\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n          *ngIf=\\\"medical_form_step5.controls.how_injury_occur.hasError('maxlength') && medical_form_step5.controls.how_injury_occur.touched\\\">\\r\\n          <p class=\\\"content\\\">Allow Only 140 Characters!</p>\\r\\n        </ion-item>\\r\\n\\r\\n\\r\\n      <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n        <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Nature of injury</ion-label>\\r\\n        <ion-textarea rows=\\\"3\\\" formControlName=\\\"nature_injury\\\" type=\\\"text\\\" color=\\\"primary\\\" class=\\\"input-box\\\">\\r\\n        </ion-textarea>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n        *ngIf=\\\"medical_form_step5.controls.nature_injury.hasError('required') && medical_form_step5.controls.nature_injury.touched\\\">\\r\\n        <p class=\\\"content\\\">Please Enter Required Field!</p>\\r\\n      </ion-item>\\r\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n          *ngIf=\\\"medical_form_step5.controls.nature_injury.hasError('maxlength') && medical_form_step5.controls.nature_injury.touched\\\">\\r\\n          <p class=\\\"content\\\">Allow Only 140 Characters!</p>\\r\\n        </ion-item>\\r\\n\\r\\n\\r\\n      <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n        <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">When did this occur?</ion-label>\\r\\n        <ion-datetime placeholder=\\\"Select Date\\\" class=\\\"input-box box\\\" formControlName=\\\"date_loss\\\"\\r\\n          displayFormat=\\\"DD MMM YYYY\\\" min=\\\"2016-01-01\\\" max=\\\"2039-12-31\\\"></ion-datetime>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n        *ngIf=\\\"medical_form_step5.controls.date_loss.hasError('required') && medical_form_step5.controls.date_loss.touched\\\">\\r\\n        <p class=\\\"content\\\">Please Select Date!</p>\\r\\n      </ion-item>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <ion-item class=\\\"item-dropdown add\\\" lines=\\\"none\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"lbl-dropdown\\\">What has been damaged?</ion-label>\\r\\n      <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"Please Select Option\\\" formControlName=\\\"reported_loss\\\" class=\\\"btn-select bg\\\" mode=\\\"md\\\">\\r\\n        <ion-select-option value=\\\"Personal Property\\\">Personal Property</ion-select-option>\\r\\n        <ion-select-option value=\\\"Neighbours Property\\\">Neighbours Property</ion-select-option>\\r\\n        <ion-select-option value=\\\"Third Party Vehicle\\\">Third Party Vehicle</ion-select-option>\\r\\n        <ion-select-option value=\\\"Other\\\">Other</ion-select-option>\\r\\n      </ion-select>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"medical_form_step5.controls.reported_loss.hasError('required') && medical_form_step5.controls.reported_loss.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Select Required Field!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <!-- Other -->\\r\\n    <div *ngIf=\\\"medical_form_step5.get('reported_loss').value == 'Other'\\\">\\r\\n      <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n        <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Please specify</ion-label>\\r\\n        <ion-input type=\\\"text\\\" color=\\\"primary\\\" formControlName=\\\"reported_loss_other\\\" class=\\\"input-box\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n        *ngIf=\\\"medical_form_step5.controls.reported_loss_other.hasError('required') && medical_form_step5.controls.reported_loss_other.touched\\\">\\r\\n        <p class=\\\"content\\\">Please Enter Required Field!</p>\\r\\n      </ion-item>\\r\\n    </div>\\r\\n\\r\\n    <ion-item class=\\\"item-dropdown add\\\" lines=\\\"none\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"lbl-dropdown\\\">Type of damage</ion-label>\\r\\n      <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"Please Select Option\\\" formControlName=\\\"type_damage\\\" class=\\\"btn-select bg\\\" mode=\\\"md\\\">\\r\\n        <ion-select-option value=\\\"Water Damage\\\">Water Damage</ion-select-option>\\r\\n        <ion-select-option value=\\\"Fire\\\">Fire</ion-select-option>\\r\\n        <ion-select-option value=\\\"Smoke\\\">Smoke</ion-select-option>\\r\\n        <ion-select-option value=\\\"Dent\\\">Dent</ion-select-option>\\r\\n        <ion-select-option value=\\\"Scratch\\\">Scratch</ion-select-option>\\r\\n        <ion-select-option value=\\\"Broken\\\">Broken</ion-select-option>\\r\\n        <ion-select-option value=\\\"Lost\\\">Lost</ion-select-option>\\r\\n        <ion-select-option value=\\\"Other\\\">Other</ion-select-option>\\r\\n      </ion-select>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"medical_form_step5.controls.type_damage.hasError('required') && medical_form_step5.controls.type_damage.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Select Required Field!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <!-- Other -->\\r\\n    <div *ngIf=\\\"medical_form_step5.get('type_damage').value == 'Other'\\\">\\r\\n      <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n        <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Please specify</ion-label>\\r\\n        <ion-input type=\\\"text\\\" color=\\\"primary\\\" formControlName=\\\"type_damage_other\\\" class=\\\"input-box\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n        *ngIf=\\\"medical_form_step5.controls.type_damage_other.hasError('required') && medical_form_step5.controls.type_damage_other.touched\\\">\\r\\n        <p class=\\\"content\\\">Please Enter Required Field!</p>\\r\\n      </ion-item>\\r\\n    </div>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">How did the damage occur?</ion-label>\\r\\n      <ion-textarea rows=\\\"3\\\" formControlName=\\\"how_damage_occur\\\" type=\\\"text\\\" color=\\\"primary\\\" class=\\\"input-box\\\">\\r\\n      </ion-textarea>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"medical_form_step5.controls.how_damage_occur.hasError('required') && medical_form_step5.controls.how_damage_occur.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Required Field!</p>\\r\\n    </ion-item>\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n          *ngIf=\\\"medical_form_step5.controls.how_damage_occur.hasError('maxlength') && medical_form_step5.controls.how_damage_occur.touched\\\">\\r\\n          <p class=\\\"content\\\">Allow Only 140 Characters!</p>\\r\\n        </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Do you know the cost of the damage?</ion-label>\\r\\n      <ion-input type=\\\"number\\\" formControlName=\\\"reported_gross_estimate\\\" color=\\\"primary\\\" class=\\\"input-box\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"medical_form_step5.controls.reported_gross_estimate.hasError('required') && medical_form_step5.controls.reported_gross_estimate.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Required Field!</p>\\r\\n    </ion-item>\\r\\n\\r\\n  </form>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"btns-footer\\\">\\r\\n  <ion-row class=\\\"row-footer\\\">\\r\\n    <ion-col class=\\\"col-footer border-R\\\">\\r\\n      <ion-button expand=\\\"full\\\" class=\\\"btn-back\\\" (click)=\\\"back()\\\">\\r\\n        <ion-icon name=\\\"arrow-round-back\\\" mode=\\\"md\\\" size=\\\"large\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n    <ion-col class=\\\"col-footer border-L\\\">\\r\\n      <ion-button expand=\\\"full\\\" class=\\\"btn-next\\\" (click)=\\\"medicalStep5Next()\\\">\\r\\n        <ion-icon name=\\\"arrow-round-forward\\\" mode=\\\"md\\\" size=\\\"large\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-footer>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MedicalStep5Page } from './medical-step5.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MedicalStep5Page\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MedicalStep5Page]\n})\nexport class MedicalStep5PageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lZGljYWwtbWFscHJhY3RpY2UvbWVkaWNhbC1zdGVwNS9tZWRpY2FsLXN0ZXA1LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { NavController } from '@ionic/angular';\r\nimport { Router } from '@angular/router';\r\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\r\nimport { CommonMockService } from 'src/app/common-mock.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\ndeclare var AddressFinder: any;\r\ndeclare var $: any;\r\n\r\n\r\n@Component({\r\n  selector: 'app-medical-step5',\r\n  templateUrl: './medical-step5.page.html',\r\n  styleUrls: ['./medical-step5.page.scss'],\r\n})\r\nexport class MedicalStep5Page implements OnInit {\r\n\r\n  medical_form_step5: FormGroup;\r\n  Claim_number: any;\r\n  editClaimData: any;\r\n  ImageServerURL: string;\r\n\r\n   /* dropdown option Variable Start */\r\n   where_loss_damage: any;\r\n   /* dropdown option Variable End */\r\n\r\n  constructor(private navCtrl: NavController,\r\n    private router: Router,\r\n    public _cS: CommonMockService,\r\n    private formBuilder: FormBuilder,\r\n    private statusBar: StatusBar) {\r\n    this.ImageServerURL = this._cS.imageUrl();\r\n    this.medical_step5_fb();\r\n    this.formControlValueChanged();\r\n    this.setClaimData();\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.statusBar.show();\r\n    this.statusBar.styleDefault();\r\n    this.statusBar.backgroundColorByHexString('#ffffff');\r\n  }\r\n\r\n  medical_step5_fb() {\r\n    this.medical_form_step5 = this.formBuilder.group({\r\n      where_loss_damage: [null, Validators.required],\r\n      where_loss_damage_other: [null],\r\n      risk_street: [null],\r\n      risk_suburb: [null],\r\n      risk_state: [null],\r\n      risk_postcode: [null],\r\n      risk_country: [null],\r\n      personal_injury: [null, Validators.required],\r\n      how_injury_occur: [null],\r\n      nature_injury: [null],\r\n      date_loss: [null],\r\n      reported_loss: [null, Validators.required],\r\n      reported_loss_other: [null],\r\n      type_damage: [null, Validators.required],\r\n      type_damage_other: [null],\r\n      how_damage_occur: [null, Validators.compose([Validators.maxLength(140), Validators.required])],\r\n      reported_gross_estimate: [null, Validators.required],\r\n    });\r\n  }\r\n\r\n  formControlValueChanged() {\r\n    this.medical_form_step5.get('where_loss_damage')\r\n      .valueChanges.subscribe(\r\n        (val: any) => {\r\n          const risk_street = this.medical_form_step5.get('risk_street');\r\n          const risk_suburb = this.medical_form_step5.get('risk_suburb');\r\n          const risk_state = this.medical_form_step5.get('risk_state');\r\n          const risk_postcode = this.medical_form_step5.get('risk_postcode');\r\n          const risk_country = this.medical_form_step5.get('risk_country');\r\n          const where_loss_damage_other = this.medical_form_step5.get('where_loss_damage_other');\r\n\r\n          if (val == \"1343\" || val == \"1344\") {\r\n            risk_street.setValidators([Validators.required]);\r\n            risk_suburb.setValidators([Validators.required]);\r\n            risk_state.setValidators([Validators.required]);\r\n            risk_postcode.setValidators([Validators.required]);\r\n            risk_country.setValidators([Validators.required]);\r\n          } else {\r\n            risk_street.patchValue(null);\r\n            risk_street.clearValidators();\r\n            risk_street.updateValueAndValidity();\r\n\r\n            risk_suburb.patchValue(null);\r\n            risk_suburb.clearValidators();\r\n            risk_suburb.updateValueAndValidity();\r\n\r\n            risk_state.patchValue(null);\r\n            risk_state.clearValidators();\r\n            risk_state.updateValueAndValidity();\r\n\r\n            risk_postcode.patchValue(null);\r\n            risk_postcode.clearValidators();\r\n            risk_postcode.updateValueAndValidity();\r\n\r\n            risk_country.patchValue(null);\r\n            risk_country.clearValidators();\r\n            risk_country.updateValueAndValidity();\r\n          }\r\n          if (val == \"1346\") {\r\n            where_loss_damage_other.setValidators([Validators.required]);\r\n          } else {\r\n            where_loss_damage_other.patchValue(null);\r\n            where_loss_damage_other.clearValidators();\r\n            where_loss_damage_other.updateValueAndValidity();\r\n          }\r\n        });\r\n\r\n    this.medical_form_step5.get('personal_injury')\r\n      .valueChanges.subscribe(\r\n        (val: any) => {\r\n          const how_injury_occur = this.medical_form_step5.get('how_injury_occur');\r\n          const nature_injury = this.medical_form_step5.get('nature_injury');\r\n          const date_loss = this.medical_form_step5.get('date_loss');\r\n\r\n          how_injury_occur.patchValue(null);\r\n          how_injury_occur.clearValidators();\r\n          how_injury_occur.updateValueAndValidity();\r\n\r\n          nature_injury.patchValue(null);\r\n          nature_injury.clearValidators();\r\n          nature_injury.updateValueAndValidity();\r\n\r\n          date_loss.patchValue(null);\r\n          date_loss.clearValidators();\r\n          date_loss.updateValueAndValidity();\r\n          if (val == \"true\") {\r\n            how_injury_occur.setValidators([Validators.required, Validators.maxLength(140)]);\r\n            nature_injury.setValidators([Validators.required, Validators.maxLength(140)]);\r\n            date_loss.setValidators([Validators.required]);\r\n          }\r\n        });\r\n\r\n    this.medical_form_step5.get('type_damage')\r\n      .valueChanges.subscribe(\r\n        (val: any) => {\r\n          const type_damage_other = this.medical_form_step5.get('type_damage_other');\r\n          if (val == 'Other') {\r\n            type_damage_other.setValidators([Validators.required]);\r\n          } else {\r\n            type_damage_other.patchValue(null);\r\n            type_damage_other.clearValidators();\r\n            type_damage_other.updateValueAndValidity();\r\n          }\r\n        });\r\n    this.medical_form_step5.get('reported_loss')\r\n      .valueChanges.subscribe(\r\n        (val: any) => {\r\n          const reported_loss_other = this.medical_form_step5.get('reported_loss_other');\r\n          if (val == \"Other\") {\r\n            reported_loss_other.setValidators([Validators.required]);\r\n          } else {\r\n            reported_loss_other.patchValue(null);\r\n            reported_loss_other.clearValidators();\r\n            reported_loss_other.updateValueAndValidity();\r\n          }\r\n        });\r\n  }\r\n\r\n  medicalStep5Next() {\r\n    for (let v in this.medical_form_step5.controls) {\r\n      this.medical_form_step5.controls[v].markAsTouched();\r\n    }\r\n    if (this.medical_form_step5.valid) {\r\n      /* riskAddres Start */\r\n      let riskStreetValue = null;\r\n      let riskSuburbValue = null;\r\n      let riskPostCodeValue = null;\r\n      let riskStateValue = null;\r\n      let riskcountryValue = null;\r\n      if ((<HTMLInputElement>document.getElementById(\"address_line_1\"))) {\r\n        riskStreetValue = (<HTMLInputElement>document.getElementById(\"address_line_1\")).value;\r\n      }\r\n      if ((<HTMLInputElement>document.getElementById(\"city\"))) {\r\n        riskSuburbValue = (<HTMLInputElement>document.getElementById(\"city\")).value;\r\n      }\r\n      if ((<HTMLInputElement>document.getElementById(\"postcode\"))) {\r\n        riskPostCodeValue = (<HTMLInputElement>document.getElementById(\"postcode\")).value;\r\n      }\r\n      if ((<HTMLInputElement>document.getElementById(\"state\"))) {\r\n        riskStateValue = (<HTMLInputElement>document.getElementById(\"state\")).value;\r\n      }\r\n      if ((<HTMLInputElement>document.getElementById(\"country\"))) {\r\n        riskcountryValue = (<HTMLInputElement>document.getElementById(\"country\")).value;\r\n      }\r\n      /* riskAddres End */\r\n      const step5 = {\r\n        \"step\": 'step5',\r\n        \"ClaimNumber\": localStorage.getItem('MedicalClaimNumber'),\r\n        \"where_loss_damage\": this.medical_form_step5.value.where_loss_damage,\r\n        \"risk_street\": riskStreetValue,\r\n        \"risk_suburb\": riskSuburbValue,\r\n        \"risk_state\": riskStateValue,\r\n        \"risk_postcode\": riskPostCodeValue,\r\n        \"risk_country\": riskcountryValue,\r\n        \"where_loss_damage_other\": this.medical_form_step5.value.where_loss_damage_other,\r\n        \"personal_injury\": this.medical_form_step5.value.personal_injury,\r\n        \"how_injury_occur\": this.medical_form_step5.value.how_injury_occur,\r\n        \"nature_injury\": this.medical_form_step5.value.nature_injury,\r\n        \"date_loss\": this.medical_form_step5.value.date_loss,\r\n        \"reported_loss\": this.medical_form_step5.value.reported_loss,\r\n        \"reported_loss_other\": this.medical_form_step5.value.reported_loss_other,\r\n        \"type_damage\": this.medical_form_step5.value.type_damage,\r\n        \"type_damage_other\": this.medical_form_step5.value.type_damage_other,\r\n        \"how_damage_occur\": this.medical_form_step5.value.how_damage_occur,\r\n        \"reported_gross_estimate\": this.medical_form_step5.value.reported_gross_estimate,\r\n      };\r\n      this._cS.put_API(this._cS.URL_Medical_Claim_Post(), step5)\r\n        .subscribe((data: any) => {\r\n          if (data.status == 0) {\r\n            this.setClaimData();\r\n            this.router.navigate(['/medical-step6']);\r\n          } else {\r\n          }\r\n        }, err => {\r\n        });\r\n    }\r\n  }\r\n\r\n  setClaimData() {\r\n    var claimNumber = localStorage.getItem('MedicalClaimNumber');\r\n    if (claimNumber) {\r\n      this._cS.get_API_Data(this._cS.URL_Ref_Claim_data(), claimNumber)\r\n        .subscribe((data: any) => {\r\n          if (data.status == 0) {\r\n            this.editClaimData = data.data;\r\n\r\n            if (this.editClaimData.where_loss_damage) {\r\n              var where_loss_damage = JSON.parse(this.editClaimData.where_loss_damage);\r\n              for (var where_loss_damage_set in where_loss_damage) {\r\n              }\r\n            }\r\n            else {\r\n              where_loss_damage_set = null;\r\n            }\r\n \r\n            this.medical_form_step5.setValue({\r\n              where_loss_damage: where_loss_damage_set,\r\n              where_loss_damage_other: this.editClaimData.where_loss_damage_other,\r\n              risk_street: this.editClaimData.risk_street,\r\n              risk_suburb: this.editClaimData.risk_suburb,\r\n              risk_state: this.editClaimData.risk_state,\r\n              risk_postcode: this.editClaimData.risk_postcode,\r\n              risk_country: this.editClaimData.risk_country,\r\n              personal_injury: this.editClaimData.personal_injury,\r\n              how_injury_occur: this.editClaimData.how_injury_occur,\r\n              nature_injury: this.editClaimData.nature_injury,\r\n              date_loss: this.editClaimData.date_loss,\r\n              reported_loss: this.editClaimData.reported_loss,\r\n              reported_loss_other: this.editClaimData.reported_loss_other,\r\n              type_damage: this.editClaimData.type_damage,\r\n              type_damage_other: this.editClaimData.type_damage_other,\r\n              how_damage_occur: this.editClaimData.how_damage_occur,\r\n              reported_gross_estimate: this.editClaimData.reported_gross_estimate,\r\n            })\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    let script = document.createElement(\"script\");\r\n    script.src = \"https://api.addressfinder.io/assets/v3/widget.js\";\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n\r\n    // DropDown Option List Value \r\n     /* Where did the loss/damage occur? */\r\n     this._cS.getoptionvalue_API(48)\r\n     .subscribe((data: any) => {\r\n       if (data.status == 0) {\r\n         this.where_loss_damage = data.data;\r\n       }\r\n     });\r\n  }\r\n  occurchange($event) {\r\n    if ($event == \"1343\" || $event == \"1344\") {\r\n    setTimeout(() => {\r\n      this.riskAddress();\r\n    }, 1000);\r\n  }\r\n  }\r\n  riskAddress() {\r\n    let widget = new AddressFinder.Widget(\r\n      document.getElementById(\"address_line_1\"),\r\n      \"PVW639JF4ET8ALGDHNKB\",\r\n      \"AU\",\r\n      {}\r\n    );\r\n\r\n    let returnResult = new BehaviorSubject(null);\r\n    widget.on(\"result:select\", function (fullAddress, metaData) {\r\n      var selected = new AddressFinder.NZSelectedAddress(fullAddress, metaData);\r\n      let SpaceCount = selected.originalAddressLines[1].split(\" \").length;\r\n      let setnum = SpaceCount - 2;\r\n      let mainadddate = selected.originalAddressLines[1].split(\" \").splice(-SpaceCount);\r\n      let adddate = selected.originalAddressLines[1].split(\" \").splice(setnum);\r\n      this.addstate = adddate[0];\r\n      this.addpincode = adddate[1];\r\n      const index: number = mainadddate.indexOf(this.addstate);\r\n      if (index !== -1) {\r\n        mainadddate.splice(index, 1);\r\n      }\r\n      const index2: number = mainadddate.indexOf(this.addpincode);\r\n      if (index2 !== -1) {\r\n        mainadddate.splice(index2, 2);\r\n      }\r\n      let returnJSON = {\r\n        mainadddate: mainadddate,\r\n        metaData: metaData\r\n      }\r\n      returnResult.next(returnJSON);\r\n    });\r\n    returnResult.subscribe(val => {\r\n      if (val) {\r\n        let address_line_1 = val.metaData.address_line_1;\r\n        let mainadddate = val.mainadddate.join(' ');\r\n        let postcode = val.metaData.postcode;\r\n        let state_territory = val.metaData.state_territory;\r\n        let country1 = \"Australia\";\r\n\r\n        var JSON = {\r\n          risk_street: address_line_1,\r\n          risk_suburb: mainadddate,\r\n          risk_postcode: postcode,\r\n          risk_state: state_territory,\r\n          risk_country: country1\r\n        }\r\n        this.medical_form_step5.patchValue(JSON);\r\n      }\r\n    })\r\n  }\r\n\r\n  back() {\r\n    this.navCtrl.pop();\r\n  }\r\n}"],"sourceRoot":""}