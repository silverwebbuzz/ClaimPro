{"version":3,"sources":["./src/app/my-profile/my-profile.page.html","./src/app/my-profile/my-profile.module.ts","./src/app/my-profile/my-profile.page.scss","./src/app/my-profile/my-profile.page.ts"],"names":[],"mappings":"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","file":"my-profile-my-profile-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons>\\r\\n      <ion-button color=\\\"primary\\\" (click)=\\\"back()\\\">\\r\\n        <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title color=\\\"primary\\\" class=\\\"head\\\">My Profile</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n\\r\\n  <!-- <img src=\\\"../../assets/images/insurence-logo.png\\\" class=\\\"lbl-logo\\\" /> -->\\r\\n\\r\\n  <form [formGroup]=\\\"profile_form\\\" autocomplete=\\\"off\\\">\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">First Name</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"firstname\\\" color=\\\"primary\\\" class=\\\"input-box\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"profile_form.controls.firstname.hasError('required') && profile_form.controls.firstname.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter First Name!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Last Name</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"lastname\\\" color=\\\"primary\\\" class=\\\"input-box\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"profile_form.controls.lastname.hasError('required') && profile_form.controls.lastname.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Last Name!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Phone Number</ion-label>\\r\\n      <ion-input type=\\\"number\\\" formControlName=\\\"phone_number\\\" color=\\\"primary\\\" class=\\\"input-box\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"profile_form.controls.phone_number.hasError('required') && profile_form.controls.phone_number.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Phone Number!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Mobile</ion-label>\\r\\n      <ion-input type=\\\"number\\\" formControlName=\\\"mobile\\\" color=\\\"primary\\\" class=\\\"input-box\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"profile_form.controls.mobile.hasError('required') && profile_form.controls.mobile.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Mobile!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Email Address</ion-label>\\r\\n      <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" color=\\\"primary\\\" class=\\\"input-box\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"profile_form.controls.email.hasError('required') && profile_form.controls.email.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Email Address!</p>\\r\\n    </ion-item>\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"profile_form.controls.email.hasError('pattern') && profile_form.controls.email.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Valid Email Address!</p>\\r\\n    </ion-item>\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"profile_form.controls.email.hasError('incorrect') && profile_form.controls.email.touched\\\">\\r\\n      <p class=\\\"content\\\">Email Address is already taken!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-label class=\\\"lbl-contact add-margin add\\\">Physical address</ion-label>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Street</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"street\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"address_line_1\\\"\\r\\n        (ionFocus)=\\\"riskAddress()\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"profile_form.controls.street.hasError('required') && profile_form.controls.street.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Street!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Suburb/Town</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"city\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"city\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"profile_form.controls.city.hasError('required') && profile_form.controls.city.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Suburb/Town!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">State</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"state\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"state\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"profile_form.controls.state.hasError('required') && profile_form.controls.state.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter State!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Postcode</ion-label>\\r\\n      <ion-input type=\\\"number\\\" formControlName=\\\"postal_code\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"postcode\\\">\\r\\n      </ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"profile_form.controls.postal_code.hasError('required') && profile_form.controls.postal_code.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Postcode!</p>\\r\\n    </ion-item>\\r\\n    \\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Country</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"country\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"country\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"profile_form.controls.country.hasError('required') && profile_form.controls.country.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Country!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-label class=\\\"lbl-contact add-margin add\\\">Postal address</ion-label>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"add-spc\\\">\\r\\n      <ion-checkbox mode=\\\"md\\\" slot=\\\"start\\\" class=\\\"add-check\\\" formControlName=\\\"same_address\\\"></ion-checkbox>\\r\\n      <ion-label class=\\\"add-lbl\\\">Same as physical address</ion-label>\\r\\n    </ion-item>\\r\\n\\r\\n    <div>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Street</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"tp_street\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"tp_StreetValue\\\"\\r\\n        (ionFocus)=\\\"riskAddress()\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"profile_form.controls.tp_street.hasError('required') && profile_form.controls.tp_street.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Street!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Suburb/Town</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"tp_city\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"tp_SuburbValue\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"profile_form.controls.tp_city.hasError('required') && profile_form.controls.tp_city.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Suburb/Town!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">State</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"tp_state\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"tp_StateValue\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"profile_form.controls.tp_state.hasError('required') && profile_form.controls.tp_state.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter State!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Postcode</ion-label>\\r\\n      <ion-input type=\\\"number\\\" formControlName=\\\"tp_postal_code\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"tp_PostCodeValue\\\">\\r\\n      </ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"profile_form.controls.tp_postal_code.hasError('required') && profile_form.controls.tp_postal_code.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Postcode!</p>\\r\\n    </ion-item>\\r\\n    \\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-item add\\\">\\r\\n      <ion-label position=\\\"stacked\\\" class=\\\"input-lbl\\\">Country</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"tp_country\\\" color=\\\"primary\\\" class=\\\"input-box\\\" id=\\\"tp_CountryValue\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"profile_form.controls.tp_country.hasError('required') && profile_form.controls.tp_country.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Country!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <ion-radio-group formControlName=\\\"contact_option\\\">\\r\\n\\r\\n      <ion-label color=\\\"primary\\\" class=\\\"lbl-head-radio add add-margin\\\">How would you like to be contacted?</ion-label>\\r\\n\\r\\n      <ion-item lines=\\\"none\\\" class=\\\"items-radio\\\">\\r\\n        <ion-label class=\\\"lbl-radio\\\">Phone Call</ion-label>\\r\\n        <ion-radio slot=\\\"start\\\" class=\\\"btn-radio\\\" value=\\\"Phone Call\\\" mode=\\\"md\\\"></ion-radio>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item lines=\\\"none\\\" class=\\\"items-radio\\\">\\r\\n        <ion-label class=\\\"lbl-radio\\\">SMS</ion-label>\\r\\n        <ion-radio slot=\\\"start\\\" class=\\\"btn-radio\\\" value=\\\"SMS\\\" mode=\\\"md\\\"></ion-radio>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item lines=\\\"none\\\" class=\\\"items-radio\\\">\\r\\n        <ion-label class=\\\"lbl-radio\\\">Email</ion-label>\\r\\n        <ion-radio slot=\\\"start\\\" class=\\\"btn-radio\\\" value=\\\"Email\\\" mode=\\\"md\\\"></ion-radio>\\r\\n      </ion-item>\\r\\n    </ion-radio-group>\\r\\n\\r\\n    <div class=\\\"btns-bottom\\\">\\r\\n\\r\\n      <ion-label class=\\\"lbl-signup\\\" color=\\\"primary\\\" routerLink=\\\"/changepass\\\">Change Password</ion-label>\\r\\n\\r\\n      <ion-button expand=\\\"full\\\" size=\\\"large\\\" shape=\\\"round\\\" class=\\\"btn-signin\\\" (click)=\\\"submit()\\\">SUBMIT</ion-button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonMockService } from 'src/app/common-mock.service';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { MyProfilePage } from './my-profile.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MyProfilePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    HttpClientModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [MyProfilePage],\r\n  providers: [\r\n    Title, CommonMockService,\r\n   ],\r\n})\r\nexport class MyProfilePageModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL215LXByb2ZpbGUvbXktcHJvZmlsZS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { NavController } from '@ionic/angular';\r\nimport { Router } from '@angular/router';\r\nimport { CommonMockService } from '../common-mock.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\ndeclare var AddressFinder: any;\r\ndeclare var $: any;\r\n\r\n\r\n@Component({\r\n  selector: 'app-my-profile',\r\n  templateUrl: './my-profile.page.html',\r\n  styleUrls: ['./my-profile.page.scss'],\r\n})\r\nexport class MyProfilePage implements OnInit {\r\n\r\n  profile_form: FormGroup;\r\n  user_Details: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n\r\n  constructor(private navCtrl: NavController,\r\n    private router:Router,\r\n    private _cS: CommonMockService,\r\n    private formBuilder: FormBuilder,\r\n    private statusBar: StatusBar) {\r\n\r\n      this.profile_fb();\r\n      this.get_user_Details()\r\n     }\r\n\r\n     ionViewWillEnter() {\r\n      this.statusBar.show();\r\n      this.statusBar.styleDefault();\r\n      this.statusBar.backgroundColorByHexString('#ffffff');\r\n    }\r\n\r\n    profile_fb() {\r\n    this.profile_form = this.formBuilder.group({\r\n      firstname: [null, Validators.required],\r\n      lastname: [null, Validators.required],\r\n      phone_number: [null, Validators.required],\r\n      mobile: [null, Validators.required],\r\n      email: [null, Validators.compose([\r\n        Validators.pattern('[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})'),\r\n        Validators.required\r\n      ])],\r\n      password: [null, Validators.required],\r\n      confirmpassword: [null, Validators.required],\r\n\r\n      street: [null, Validators.required],\r\n      city: [null, Validators.required],\r\n      state: [null, Validators.required],\r\n      postal_code: [null, Validators.required],\r\n      country: [null, Validators.required],\r\n\r\n      same_address: [null, Validators.required],\r\n\r\n      tp_street: [null, Validators.required],\r\n      tp_city: [null, Validators.required],\r\n      tp_state: [null, Validators.required],\r\n      tp_postal_code: [null, Validators.required],\r\n      tp_country: [null, Validators.required],\r\n\r\n      contact_option: [null, Validators.required]\r\n  });\r\n}\r\n\r\nngOnInit() {\r\n  let script = document.createElement(\"script\");\r\n  script.src = \"https://api.addressfinder.io/assets/v3/widget.js\";\r\n  script.async = true;\r\n  document.body.appendChild(script);\r\n  \r\n  }\r\n\r\n  riskAddress() {\r\n    let widget = new AddressFinder.Widget(\r\n      document.getElementById(\"address_line_1\"),\r\n      \"PVW639JF4ET8ALGDHNKB\",\r\n      \"AU\",\r\n      {}\r\n    );\r\n\r\n    let returnResult = new BehaviorSubject(null);\r\n    widget.on(\"result:select\", function (fullAddress, metaData) {\r\n      var selected = new AddressFinder.NZSelectedAddress(fullAddress, metaData);\r\n      let SpaceCount = selected.originalAddressLines[1].split(\" \").length;\r\n      let setnum = SpaceCount - 2;\r\n      let mainadddate = selected.originalAddressLines[1].split(\" \").splice(-SpaceCount);\r\n      let adddate = selected.originalAddressLines[1].split(\" \").splice(setnum);\r\n      this.addstate = adddate[0];\r\n      this.addpincode = adddate[1];\r\n      const index: number = mainadddate.indexOf(this.addstate);\r\n      if (index !== -1) {\r\n        mainadddate.splice(index, 1);\r\n      }\r\n      const index2: number = mainadddate.indexOf(this.addpincode);\r\n      if (index2 !== -1) {\r\n        mainadddate.splice(index2, 2);\r\n      }\r\n      let returnJSON = {\r\n        mainadddate: mainadddate,\r\n        metaData: metaData\r\n      }\r\n      returnResult.next(returnJSON);\r\n    });\r\n    returnResult.subscribe(val => {\r\n      if (val) {\r\n        let address_line_1 = val.metaData.address_line_1;\r\n        let mainadddate = val.mainadddate.join(' ');\r\n        let postcode = val.metaData.postcode;\r\n        let state_territory = val.metaData.state_territory;\r\n        let country1 = \"Australia\";\r\n        \r\n        var JSON = {\r\n          street: address_line_1,\r\n          city: mainadddate,\r\n          postal_code: postcode,\r\n          state: state_territory,\r\n          country: country1\r\n        }\r\n        this.profile_form.patchValue(JSON);    \r\n      }\r\n    })\r\n  }\r\n\r\n  submit(){\r\n    for (let v in this.profile_form.controls) {\r\n      this.profile_form.controls[v].markAsTouched();\r\n    }\r\n    if (this.profile_form.valid) {\r\n\r\n       /* Address Start */\r\n       let StreetValue = null;\r\n       let SuburbValue = null;\r\n       let PostCodeValue = null;\r\n       let StateValue = null;\r\n       let CountryValue = null;\r\n \r\n       if ((<HTMLInputElement>document.getElementById(\"address_line_1\"))) {\r\n         StreetValue = (<HTMLInputElement>document.getElementById(\"address_line_1\")).value;\r\n       }\r\n       if ((<HTMLInputElement>document.getElementById(\"city\"))) {\r\n         SuburbValue = (<HTMLInputElement>document.getElementById(\"city\")).value;\r\n       }\r\n       if ((<HTMLInputElement>document.getElementById(\"postcode\"))) {\r\n         PostCodeValue = (<HTMLInputElement>document.getElementById(\"postcode\")).value;\r\n       }\r\n       if ((<HTMLInputElement>document.getElementById(\"state\"))) {\r\n         StateValue = (<HTMLInputElement>document.getElementById(\"state\")).value;\r\n       }\r\n       if ((<HTMLInputElement>document.getElementById(\"country\"))) {\r\n         CountryValue = (<HTMLInputElement>document.getElementById(\"country\")).value;\r\n       }\r\n       /* Address End */\r\n\r\n      const body = {\r\n        \"firstname\": this.profile_form.value.firstname,\r\n        \"lastname\": this.profile_form.value.lastname,\r\n        \"phone_number\": this.profile_form.value.phone_number,\r\n        \"mobile\": this.profile_form.value.mobile,\r\n        \"email\": this.profile_form.value.email,\r\n        \"password\": this.profile_form.value.password,\r\n        \"confirmpassword\": this.profile_form.value.confirmpassword,\r\n\r\n        \"street\": StreetValue,\r\n        \"city\": SuburbValue,\r\n        \"state\": StateValue,\r\n        \"postal_code\": PostCodeValue,\r\n        \"country\": CountryValue,\r\n\r\n        \"same_address\": this.profile_form.value.same_address,\r\n\r\n        \"tp_street\": this.profile_form.value.tp_street,\r\n        \"tp_city\": this.profile_form.value.tp_city,\r\n        \"tp_state\": this.profile_form.value.tp_state,\r\n        \"tp_postal_code\": this.profile_form.value.tp_postal_code,\r\n        \"tp_country\": this.profile_form.value.tp_country,\r\n\r\n        \"sla\": this.profile_form.value.contact_option\r\n\r\n        // \"name\": this.profile_form.value.name,\r\n        // \"street\": StreetValue,\r\n        // \"city\": SuburbValue,\r\n        // \"zipcode\": PostCodeValue,\r\n        // \"state\": StateValue,\r\n        // \"country\": CountryValue,\r\n        // \"telephone\": this.profile_form.value.phone_number,\r\n        // \"email\": this.profile_form.value.email_address,\r\n        // \"sla\": this.profile_form.value.contact_option\r\n      };\r\n      var Tokenvalue = localStorage.getItem('keyToken');\r\n     \r\n      if (Tokenvalue) {\r\n        this._cS.Display_Loader(true);\r\n        this._cS.post_API(this._cS.URL_User_Details_post(), body)\r\n          .subscribe((data: any) => {\r\n            if (data.status == 0) {\r\n              this._cS.presentToastWithOptions(data.message);\r\n            } else {\r\n              this._cS.presentToastWithOptions(data.message);\r\n            }\r\n          }, err => {\r\n          });\r\n      } \r\n    }\r\n  }\r\n  get_user_Details() {\r\n    this._cS.Display_Loader(true);\r\n    this._cS.get_API(this._cS.URL_User_Details_Get())\r\n      .subscribe((data: any) => {\r\n        if (data.status == 0) {\r\n          this.profile_form.patchValue({\r\n            id: data.data.userid,\r\n            name: data.data.name,\r\n            street: data.data.street,\r\n            postal_code: data.data.zipcode,\r\n            city: data.data.city,\r\n            state: data.data.state,\r\n            country: data.data.country,\r\n            phone_number: data.data.telephone,\r\n            email_address: data.data.email,\r\n            contact_option: data.data.contact_option ? data.data.contact_option : 'Phone Call'\r\n          });\r\n          this.user_Details.next(data.data);\r\n        } else {\r\n          this._cS.logout();\r\n          this.user_Details.next(null);\r\n          // this._cS.Display_Toaster('error', data.message);\r\n        }\r\n        this._cS.Display_Loader(false);\r\n      }, err => {\r\n        this._cS.logout();\r\n        this.user_Details.next(null);\r\n        // this._cS.Display_Toaster('error', err.message);\r\n        this._cS.Display_Loader(false);\r\n      });\r\n  };\r\n\r\n  // get_user_Details() {\r\n  //   this._cS.Display_Loader(true);\r\n  //   this._cS.get_API(this._cS.URL_User_Details_Get())\r\n  //     .subscribe((data: any) => {\r\n  //       if (data.status == 0) {\r\n  //         this.profile_form.patchValue({\r\n  //           id: data.data.userid,\r\n  //           name: data.data.name,\r\n  //           street: data.data.street,\r\n  //           postal_code: data.data.zipcode,\r\n  //           city: data.data.city,\r\n  //           state: data.data.state,\r\n  //           phone_number: data.data.telephone,\r\n  //           email_address: data.data.email,\r\n  //           contact_option: data.data.contact_option ? data.data.contact_option : 'Phone Call'\r\n  //         });\r\n  //         this.user_Details.next(data.data);\r\n  //       } else {\r\n  //         this._cS.logout();\r\n  //         this.user_Details.next(null);\r\n  //         this._cS.Display_Toaster('error', data.message);\r\n  //       }\r\n  //       this._cS.Display_Loader(false);\r\n  //     }, err => {\r\n  //       this._cS.logout();\r\n  //       this.user_Details.next(null);\r\n  //       this._cS.Display_Toaster('error', err.message);\r\n  //       this._cS.Display_Loader(false);\r\n  //     });\r\n  // };\r\n    \r\n  back(){\r\n    this.navCtrl.pop();\r\n  }\r\n\r\n}"],"sourceRoot":""}